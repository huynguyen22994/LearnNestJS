var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.033,1,2.664]],["body/classes/AllExceptionsFilter.html",[0,0.036,1,3.834,2,1.9,3,0.251,4,0.222,5,0.222,6,4.331,7,3.259,8,0.312,9,0.591,10,4.589,11,4.331,12,5.396,13,5.184,14,0.312,15,3.826,16,0.556,17,0.022,18,0.41,19,0.343,20,0.556,21,4.307,22,0.445,23,2.36,24,0.414,25,0.312,26,5.085,27,2.606,28,0.251,29,2.885,30,2.198,31,3.834,32,3.826,33,3.259,34,2.383,35,3.826,36,3.826,37,0.016,38,0.016]],["title/controllers/AppController.html",[39,1.537,40,2.406]],["body/controllers/AppController.html",[0,0.04,3,0.279,4,0.247,5,0.247,8,0.347,9,0.634,14,0.347,17,0.022,22,0.495,24,0.444,25,0.347,28,0.279,37,0.017,38,0.017,39,2.374,40,3.716,41,2.271,42,3.63,43,5.403,44,2.903,45,4.262,46,2.532,47,3.456,48,3.63,49,2.654,50,3.63,51,0.709,52,4.262]],["title/classes/AppException.html",[0,0.033,53,2.406]],["body/classes/AppException.html",[0,0.043,2,2.281,3,0.301,4,0.266,5,0.266,14,0.374,17,0.022,24,0.374,25,0.374,28,0.301,29,4.314,37,0.018,38,0.018,53,3.896,54,3.913,55,4.243,56,4.243,57,4.594,58,3.464,59,3.464,60,3.129,61,4.594,62,3.464]],["title/modules/AppModule.html",[63,1.444,64,2.201]],["body/modules/AppModule.html",[0,0.023,3,0.16,4,0.141,5,0.141,9,0.283,14,0.198,16,0.354,17,0.023,18,0.261,19,0.219,20,0.354,22,0.283,23,1.13,24,0.518,25,0.198,28,0.16,37,0.011,38,0.011,39,1.06,40,3.029,41,1.964,47,3.219,48,2.074,63,1.818,64,3.897,65,1.298,66,1.517,67,1.836,68,1.836,69,1.517,70,3.029,71,1.659,72,2.074,73,2.074,74,2.074,75,3.491,76,3.491,77,2.78,78,1.836,79,1.836,80,2.436,81,3.14,82,1.836,83,2.78,84,3.74,85,2.436,86,1.836,87,2.78,88,2.074,89,2.436,90,2.074,91,2.074,92,2.436,93,2.436,94,2.436,95,2.511,96,2.074,97,1.399,98,1.659,99,1.836,100,2.511,101,1.399,102,3.14,103,3.14,104,2.436,105,2.436,106,2.436,107,2.074,108,0.432,109,2.78,110,4.96,111,2.436,112,2.511,113,1.659,114,3.14,115,2.436,116,2.436,117,2.436,118,1.209,119,2.436,120,2.436,121,2.436,122,1.659,123,0.995,124,1.659,125,1.13,126,1.417,127,2.436,128,1.836]],["title/injectables/AppService.html",[47,2.029,129,0.178]],["body/injectables/AppService.html",[0,0.043,3,0.296,4,0.262,5,0.262,8,0.368,9,0.658,14,0.368,17,0.022,22,0.525,24,0.368,25,0.368,28,0.296,37,0.018,38,0.018,43,5.52,46,2.628,47,3.252,51,0.752,129,0.286,130,1.296,131,3.849,132,4.519,133,4.519,134,4.519]],["title/guards/AuthGuard.html",[135,1.537,136,2.406]],["body/guards/AuthGuard.html",[0,0.034,3,0.24,4,0.212,5,0.212,8,0.298,9,0.573,14,0.298,16,0.531,17,0.022,18,0.528,19,0.328,20,0.531,22,0.425,24,0.402,25,0.298,28,0.24,37,0.015,38,0.015,51,0.608,108,0.649,123,2.016,129,0.249,135,1.591,136,3.36,137,2.1,138,3.114,139,3.722,140,3.072,141,2.04,142,3.657,143,1.406,144,2.628,145,2.29,146,2.022,147,1.248,148,3.657,149,2.277,150,1.111,151,2.277,152,2.757,153,3.657,154,2.49,155,2.49,156,1.948]],["title/guards/AuthGuardController.html",[135,1.537,157,2.406]],["body/guards/AuthGuardController.html",[0,0.036,3,0.247,4,0.219,5,0.219,8,0.307,9,0.585,14,0.307,16,0.548,17,0.022,18,0.404,19,0.339,20,0.548,22,0.438,24,0.41,25,0.307,28,0.247,37,0.016,38,0.016,39,1.642,51,0.628,108,0.67,123,1.542,129,0.254,135,1.642,137,2.167,139,3.77,140,3.138,141,2.066,143,1.451,144,2.684,145,2.339,146,2.054,147,1.288,150,1.147,151,2.35,154,2.57,155,2.57,156,2.011,157,3.432,158,4.291,159,2.57,160,2.846]],["title/guards/AuthGuardGlobal.html",[135,1.537,161,2.664]],["body/guards/AuthGuardGlobal.html",[0,0.036,3,0.247,4,0.219,5,0.219,8,0.307,9,0.585,14,0.307,16,0.548,17,0.022,18,0.404,19,0.339,20,0.548,22,0.438,24,0.41,25,0.307,28,0.247,37,0.016,38,0.016,51,0.628,108,0.67,123,1.542,129,0.254,135,1.642,137,2.167,139,3.77,140,3.138,141,2.066,143,1.451,144,2.684,145,2.339,146,2.054,147,1.288,150,1.147,151,2.35,154,2.57,155,2.57,156,2.011,159,2.57,160,2.846,161,3.799,162,4.291,163,2.57]],["title/guards/AuthGuardModule.html",[135,1.537,164,2.406]],["body/guards/AuthGuardModule.html",[0,0.036,3,0.247,4,0.219,5,0.219,8,0.307,9,0.585,14,0.307,16,0.548,17,0.022,18,0.404,19,0.339,20,0.548,22,0.438,24,0.41,25,0.307,28,0.247,37,0.016,38,0.016,51,0.628,63,1.542,108,0.67,123,1.542,129,0.254,135,1.642,137,2.167,139,3.77,140,3.138,141,2.066,143,1.451,144,2.684,145,2.339,146,2.054,147,1.288,150,1.147,151,2.35,154,2.57,155,2.57,156,2.011,159,2.57,160,2.846,164,3.432,165,4.291]],["title/injectables/AuthenMiddleware.html",[98,2.406,129,0.178]],["body/injectables/AuthenMiddleware.html",[0,0.037,3,0.254,4,0.225,5,0.225,8,0.316,9,0.596,14,0.316,16,0.564,17,0.022,18,0.416,19,0.348,20,0.564,22,0.451,23,1.801,24,0.418,25,0.316,28,0.254,37,0.016,38,0.016,98,3.496,100,4.168,101,2.229,108,0.689,118,2.548,122,2.643,123,2.501,124,3.917,125,2.841,126,2.353,129,0.259,130,1.113,166,3.305,167,4.372,168,3.881,169,4.372,170,2.643,171,3.305]],["title/injectables/CacheInterceptor.html",[129,0.178,172,2.406]],["body/injectables/CacheInterceptor.html",[0,0.035,3,0.246,4,0.218,5,0.218,8,0.306,9,0.584,14,0.306,16,0.546,17,0.022,18,0.402,19,0.337,20,0.546,22,0.436,24,0.409,25,0.306,28,0.246,37,0.016,38,0.016,51,0.836,108,0.667,126,2.176,129,0.254,130,1.077,141,2.063,143,1.444,146,2.049,147,1.283,150,1.142,156,2.001,172,3.421,173,3.2,174,2.676,175,2.494,176,2.999,177,3.757,178,2.494,179,3.757,180,5.023,181,3.757,182,3.757,183,2.833]],["title/interfaces/CatInterFace.html",[184,2.029,185,2.201]],["body/interfaces/CatInterFace.html",[3,0.287,4,0.253,5,0.253,8,0.356,17,0.021,18,0.686,19,0.547,28,0.287,37,0.017,38,0.017,46,3.135,184,2.513,185,3.455,186,3.299,187,3.726,188,2.956,189,3.99,190,3.99,191,3.498]],["title/controllers/CatsController.html",[39,1.537,192,2.406]],["body/controllers/CatsController.html",[0,0.019,3,0.054,4,0.047,5,0.047,8,0.067,9,0.172,10,0.617,14,0.398,16,0.673,17,0.022,18,0.496,19,0.416,20,0.673,21,0.617,22,0.568,23,1.148,24,0.423,25,0.067,28,0.054,30,1.421,33,0.697,37,0.005,38,0.005,39,1.244,41,0.436,44,3.329,46,2.525,49,0.51,51,0.793,53,1.007,55,1.007,58,0.617,59,0.617,60,0.558,62,1.114,100,2.368,101,0.47,112,2.173,113,1.007,118,1.584,122,0.558,123,1.697,124,2.692,125,1.481,126,1.52,136,0.558,144,2.106,145,1.481,149,2.696,150,0.449,157,1.007,170,1.007,172,0.558,185,2.323,191,2.984,192,1.007,193,0.697,194,0.697,195,1.478,196,2.462,197,1.478,198,1.259,199,1.478,200,2.474,201,1.478,202,1.478,203,1.478,204,2.02,205,2.02,206,2.02,207,1.478,208,1.478,209,1.478,210,2.474,211,0.819,212,0.819,213,1.478,214,1.478,215,0.819,216,1.478,217,0.819,218,2.949,219,1.478,220,0.819,221,0.819,222,0.819,223,0.819,224,1.478,225,0.819,226,1.478,227,0.819,228,0.819,229,1.478,230,0.819,231,4.635,232,0.819,233,1.478,234,0.819,235,0.819,236,0.819,237,2.474,238,0.819,239,1.721,240,1.478,241,0.819,242,3.953,243,0.819,244,0.819,245,0.819,246,0.819,247,0.819,248,0.819,249,0.819,250,0.819,251,0.819,252,0.819,253,0.819,254,0.819,255,1.478,256,1.685,257,0.819,258,0.819,259,1.865,260,0.819,261,1.007,262,0.819,263,0.819,264,0.819,265,2.02,266,0.819,267,0.819,268,0.819,269,0.819,270,0.617,271,0.819,272,0.819,273,0.617,274,0.819,275,1.478,276,2.474,277,0.819,278,0.819,279,0.819,280,0.819,281,0.819,282,0.849,283,0.697,284,0.697,285,1.007,286,0.51,287,0.697,288,1.007,289,0.819,290,0.558,291,0.819,292,1.007,293,0.819,294,0.819,295,1.947,296,0.819,297,0.819,298,0.819,299,0.819,300,0.697,301,0.558,302,0.819,303,0.558,304,0.819,305,0.558,306,0.819,307,0.819,308,0.558,309,0.819,310,0.819,311,0.819,312,0.819,313,1.478,314,1.478,315,1.478,316,0.819,317,0.697,318,0.819,319,0.819,320,0.697,321,0.819,322,0.819,323,1.478,324,0.697,325,1.259,326,0.697,327,1.541,328,1.927,329,0.697,330,2.474,331,0.819,332,0.819,333,1.478,334,0.819,335,0.819,336,0.819,337,2.962,338,0.819,339,0.819,340,0.819,341,0.697,342,0.819,343,0.819,344,0.819,345,0.819,346,0.819,347,0.697,348,0.819,349,0.819,350,0.819,351,0.819,352,0.819,353,0.819,354,0.819,355,0.819,356,0.819,357,0.697,358,1.007,359,1.259,360,0.819,361,1.259,362,0.819,363,0.819,364,0.819,365,0.819,366,0.819,367,0.819,368,0.819,369,0.819,370,1.259,371,0.819,372,0.819,373,0.819,374,0.819,375,0.819,376,0.697,377,0.819,378,0.819,379,0.734,380,0.819,381,0.819,382,0.558,383,0.819,384,0.819,385,2.859,386,0.819,387,0.819,388,0.819,389,0.617,390,0.819,391,0.819,392,0.819,393,0.819,394,1.478,395,0.819,396,0.819,397,0.819,398,0.819,399,0.819,400,0.819,401,0.617,402,0.819,403,0.819,404,2.02,405,1.721,406,1.478,407,2.02,408,2.02,409,2.02,410,0.819,411,0.819,412,0.819,413,0.819,414,0.819,415,0.819,416,0.819,417,0.819,418,0.819,419,0.819,420,0.819,421,0.819,422,0.819,423,0.819,424,0.819,425,0.819,426,0.819,427,0.819,428,1.478]],["title/modules/CatsModule.html",[63,1.444,75,2.201]],["body/modules/CatsModule.html",[0,0.022,3,0.156,4,0.138,5,0.138,9,0.277,14,0.194,16,0.347,17,0.022,18,0.256,19,0.214,20,0.347,22,0.277,23,1.108,24,0.497,25,0.194,27,1.625,28,0.156,37,0.011,38,0.011,41,1.934,49,1.486,60,1.625,63,2.273,65,1.271,66,1.486,67,1.799,68,1.799,69,1.486,70,2.992,71,2.992,75,3.601,77,2.737,78,1.799,79,1.799,82,1.799,83,2.737,84,3.701,86,1.799,87,2.737,88,2.032,97,1.37,99,1.799,108,0.424,109,1.799,112,1.625,113,2.472,114,2.032,118,2.181,163,3.343,164,2.472,192,2.992,282,3.801,283,2.032,286,2.26,287,2.032,300,2.032,347,2.032,359,2.032,361,2.032,370,2.032,405,2.032,429,2.032,430,2.032,431,2.032,432,2.386,433,2.386,434,3.629,435,3.629,436,3.629,437,3.629,438,2.386,439,2.472,440,2.386,441,2.386,442,2.472,443,2.386,444,2.386,445,2.386,446,2.386,447,2.386,448,2.386,449,4.908,450,2.386,451,4.908,452,2.386,453,2.386,454,2.386,455,2.386,456,2.386,457,2.386,458,2.386]],["title/injectables/CatsService.html",[129,0.178,282,2.029]],["body/injectables/CatsService.html",[0,0.034,3,0.235,4,0.207,5,0.207,8,0.291,9,0.565,14,0.45,16,0.52,17,0.022,18,0.383,19,0.436,20,0.52,22,0.565,23,1.66,24,0.396,25,0.291,28,0.235,37,0.015,38,0.015,50,4.702,51,0.595,113,3.76,129,0.245,130,1.026,185,4.141,188,2.589,198,5.044,282,2.791,284,3.047,357,4.14,358,2.436,459,3.047,460,4.702,461,4.86,462,3.577,463,3.577,464,2.697,465,1.66,466,3.577,467,3.577,468,3.577]],["title/classes/CreateCatDto.html",[0,0.033,218,2.406]],["body/classes/CreateCatDto.html",[0,0.04,2,2.105,3,0.278,4,0.246,5,0.246,8,0.345,14,0.489,17,0.021,18,0.643,19,0.539,28,0.278,37,0.017,38,0.017,46,2.939,118,2.105,188,2.897,189,3.739,190,3.739,191,3.123,218,3.703,469,4.774,470,3.611,471,4.24,472,4.24,473,4.24,474,4.24]],["title/classes/CreateCatDtoV2.html",[0,0.033,475,2.664]],["body/classes/CreateCatDtoV2.html",[0,0.048,2,1.9,3,0.251,4,0.222,5,0.222,8,0.312,14,0.465,17,0.022,18,0.612,19,0.513,24,0.312,28,0.251,37,0.016,38,0.016,44,3.89,46,2.825,188,2.709,189,3.557,190,3.557,191,2.921,358,4.145,469,4.589,475,3.834,476,3.259,477,5.712,478,3.826,479,6.336,480,3.826,481,3.826,482,2.885]],["title/modules/DatabaseModule.html",[63,1.444,95,2.406]],["body/modules/DatabaseModule.html",[0,0.043,3,0.218,4,0.192,5,0.192,9,0.385,14,0.27,16,0.482,17,0.023,18,0.355,19,0.298,20,0.482,22,0.385,24,0.376,25,0.27,28,0.303,37,0.014,38,0.014,51,0.552,63,2.464,64,2.067,65,1.768,70,4.107,71,2.26,81,2.826,95,3.907,96,2.826,118,1.647,150,1.008,156,1.768,163,3.907,464,2.502,465,1.54,483,3.318,484,4.615,485,3.318,486,4.615,487,5.307,488,3.318,489,4.615,490,3.318,491,5.307,492,3.318,493,3.318,494,3.318,495,3.318,496,3.318,497,3.318,498,3.318,499,3.318,500,3.318]],["title/controllers/DogController.html",[39,1.537,501,2.406]],["body/controllers/DogController.html",[0,0.041,3,0.288,4,0.255,5,0.255,8,0.358,9,0.647,14,0.358,17,0.022,22,0.511,24,0.358,25,0.358,28,0.288,30,2.526,37,0.017,38,0.017,39,1.914,41,2.343,44,2.996,51,0.732,194,3.746,196,3.803,501,3.791,502,3.746,503,5.566,504,6.418,505,4.398,506,4.398]],["title/modules/DogModule.html",[63,1.444,76,2.201]],["body/modules/DogModule.html",[0,0.038,3,0.263,4,0.232,5,0.232,9,0.466,14,0.327,16,0.583,17,0.022,18,0.43,19,0.36,20,0.583,22,0.466,23,1.863,24,0.476,25,0.327,28,0.263,37,0.016,38,0.016,41,2.796,63,2.144,65,2.138,76,3.268,82,3.026,83,3.956,84,4.676,86,3.026,87,3.956,97,2.305,99,3.026,108,0.712,109,3.026,501,3.982,507,4.013,508,4.013,509,4.013,510,4.013]],["title/injectables/ErrorsInterceptor.html",[129,0.178,511,2.664]],["body/injectables/ErrorsInterceptor.html",[0,0.035,3,0.243,4,0.215,5,0.215,8,0.302,9,0.578,14,0.302,16,0.538,17,0.022,18,0.397,19,0.333,20,0.538,22,0.431,24,0.458,25,0.302,28,0.243,37,0.015,38,0.015,51,0.616,108,0.658,126,2.31,129,0.251,130,1.063,141,2.051,143,1.425,146,2.035,147,1.265,174,2.652,175,2.471,176,2.983,178,2.471,273,3.753,328,1.72,379,1.84,511,3.753,512,3.156,513,3.706,514,4.24,515,3.156,516,1.974,517,2.524,518,3.156]],["title/classes/ForbiddenException.html",[0,0.033,285,2.406]],["body/classes/ForbiddenException.html",[0,0.043,2,2.281,3,0.301,4,0.266,5,0.266,14,0.374,17,0.022,24,0.374,25,0.374,28,0.301,29,4.314,31,3.464,37,0.018,38,0.018,55,4.243,56,4.243,58,3.464,62,3.464,285,3.896,519,3.913,520,4.594,521,3.913,522,4.594]],["title/injectables/GlobalValidation.html",[129,0.178,523,2.664]],["body/injectables/GlobalValidation.html",[0,0.038,3,0.263,4,0.232,5,0.232,8,0.327,9,0.61,14,0.327,16,0.583,17,0.022,18,0.43,19,0.36,20,0.583,22,0.466,24,0.327,25,0.327,28,0.263,30,2.305,34,2.499,37,0.016,38,0.016,51,0.668,108,0.712,129,0.265,130,1.151,196,3.641,256,2.733,270,3.026,379,1.992,401,3.026,465,2.435,523,3.956,524,3.418,525,3.014,526,3.014,527,3.358,528,3.561,529,4.013,530,3.014,531,4.013]],["title/classes/HttpExceptionFilter.html",[0,0.033,286,2.201]],["body/classes/HttpExceptionFilter.html",[0,0.033,2,1.731,3,0.229,4,0.202,5,0.202,8,0.284,9,0.555,10,4.107,11,4.068,12,4.639,13,4.99,14,0.284,16,0.506,17,0.022,18,0.373,19,0.313,20,0.506,21,2.629,22,0.405,23,1.618,24,0.389,25,0.284,28,0.229,31,2.629,34,2.171,37,0.015,38,0.015,55,3.991,101,2.002,108,0.848,112,2.375,123,1.952,125,2.528,150,1.781,286,2.974,328,1.618,329,4.068,341,2.969,532,2.969,533,5.447,534,3.487,535,3.487,536,2.969,537,3.487,538,3.487,539,3.487,540,3.487,541,3.487,542,3.487,543,3.487,544,3.487,545,3.487,546,3.487]],["title/injectables/LoggerMiddleware.html",[97,2.029,129,0.178]],["body/injectables/LoggerMiddleware.html",[0,0.037,3,0.254,4,0.225,5,0.225,8,0.316,9,0.596,14,0.316,16,0.564,17,0.022,18,0.416,19,0.348,20,0.564,22,0.451,23,1.801,24,0.418,25,0.316,28,0.254,37,0.016,38,0.016,97,2.948,100,4.168,101,2.229,108,0.689,118,2.548,122,2.643,123,2.501,124,3.917,125,2.841,126,2.353,129,0.259,130,1.113,167,4.372,169,4.372,170,2.643,547,3.305,548,3.881,549,3.881]],["title/injectables/LoggingGlobalInterceptor.html",[129,0.178,550,2.664]],["body/injectables/LoggingGlobalInterceptor.html",[0,0.033,3,0.23,4,0.204,5,0.204,8,0.286,9,0.558,14,0.286,16,0.511,17,0.022,18,0.377,19,0.316,20,0.511,22,0.408,24,0.446,25,0.286,28,0.23,37,0.015,38,0.015,51,0.585,108,0.624,126,2.261,129,0.242,130,1.008,141,2.007,143,1.352,145,2.23,146,1.981,147,1.2,150,1.069,163,3.272,174,2.559,175,2.385,176,2.919,178,2.385,379,1.746,516,1.873,517,2.395,550,3.622,551,3.622,552,2.995,553,3.516,554,3.622,555,2.651,556,2.651,557,3.622,558,2.651,559,2.651]],["title/injectables/LoggingInterceptor.html",[129,0.178,305,2.406]],["body/injectables/LoggingInterceptor.html",[0,0.034,3,0.236,4,0.208,5,0.208,8,0.293,9,0.566,14,0.293,16,0.522,17,0.022,18,0.385,19,0.322,20,0.522,22,0.417,24,0.451,25,0.293,28,0.236,37,0.015,38,0.015,51,0.598,108,0.638,126,2.127,129,0.246,130,1.03,141,2.026,143,1.381,145,2.263,146,2.004,147,1.227,150,1.092,174,2.597,175,2.42,176,2.945,178,2.42,183,2.709,305,3.32,379,1.784,516,1.914,554,3.676,555,2.709,556,2.709,557,3.676,558,2.709,559,2.709,560,3.06,561,3.593]],["title/injectables/LoggingModuleInterceptor.html",[129,0.178,442,2.406]],["body/injectables/LoggingModuleInterceptor.html",[0,0.033,3,0.231,4,0.205,5,0.205,8,0.288,9,0.56,14,0.288,16,0.513,17,0.022,18,0.378,19,0.317,20,0.513,22,0.41,24,0.447,25,0.288,28,0.231,37,0.015,38,0.015,51,0.587,63,1.969,108,0.627,126,2.108,129,0.243,130,1.013,141,2.011,143,1.358,145,2.236,146,1.986,147,1.206,150,1.073,174,2.567,175,2.392,176,2.924,178,2.392,183,2.663,379,1.753,442,3.281,516,1.881,551,3.633,554,3.633,555,2.663,556,2.663,557,3.633,558,2.663,559,2.663,562,3.008,563,3.531]],["title/injectables/ModuleValidation.html",[129,0.178,439,2.406]],["body/injectables/ModuleValidation.html",[0,0.038,3,0.263,4,0.232,5,0.232,8,0.327,9,0.61,14,0.327,16,0.583,17,0.022,18,0.43,19,0.36,20,0.583,22,0.466,24,0.327,25,0.327,28,0.263,30,2.305,34,2.499,37,0.016,38,0.016,51,0.668,108,0.712,129,0.265,130,1.151,196,3.641,256,2.733,270,3.026,379,1.992,401,3.026,439,3.574,465,2.435,525,3.014,526,3.014,527,3.358,528,3.561,530,3.014,564,3.418,565,4.013,566,4.013]],["title/injectables/ParseIntPipeV2.html",[129,0.178,295,2.406]],["body/injectables/ParseIntPipeV2.html",[0,0.036,3,0.251,4,0.222,5,0.222,8,0.312,9,0.591,14,0.312,16,0.556,17,0.022,18,0.41,19,0.343,20,0.556,22,0.445,24,0.312,25,0.312,28,0.251,37,0.016,38,0.016,46,2.651,51,0.637,108,0.679,129,0.257,130,1.097,150,1.163,191,2.921,295,3.463,327,2.383,328,1.776,465,1.776,525,2.921,526,2.921,527,3.28,528,3.496,530,2.921,567,4.331,568,3.259,569,3.826,570,3.259,571,5.085,572,3.826,573,3.826,574,3.826,575,3.259,576,3.826]],["title/interfaces/Response.html",[125,1.64,184,2.029]],["body/interfaces/Response.html",[0,0.037,3,0.256,4,0.226,5,0.226,8,0.318,17,0.022,19,0.35,24,0.47,25,0.318,28,0.338,37,0.016,38,0.016,51,0.649,108,0.692,125,2.39,126,1.98,129,0.26,141,1.758,146,1.865,147,1.331,175,1.936,176,2.556,178,2.556,184,2.239,186,2.94,188,2.743,382,4.342,516,2.077,517,2.655,577,2.94,578,4.91,579,3.321,580,2.655,581,3.321]],["title/guards/RoleGuard.html",[135,1.537,303,2.406]],["body/guards/RoleGuard.html",[0,0.025,3,0.173,4,0.153,5,0.153,8,0.216,9,0.456,14,0.381,16,0.679,17,0.022,18,0.501,19,0.352,20,0.679,22,0.456,24,0.421,25,0.216,27,1.803,28,0.173,37,0.012,38,0.012,49,1.648,51,0.86,56,1.803,108,0.47,123,1.603,129,0.198,137,1.52,139,3.22,140,2.443,141,1.765,143,1.018,144,2.491,145,1.821,146,1.693,147,0.904,149,2.443,150,1.421,151,1.648,152,1.996,156,2.09,171,2.254,301,3.184,303,2.672,317,2.254,327,1.648,328,1.228,521,2.254,582,2.254,583,3.923,584,2.647,585,5.783,586,2.647,587,2.647,588,3.923,589,4.675,590,2.647,591,3.923,592,2.647,593,2.647,594,2.647,595,2.647,596,2.647,597,2.647,598,2.647,599,2.647,600,2.647,601,2.647,602,1.996,603,2.647,604,2.647,605,2.647,606,2.647,607,2.647,608,2.647,609,2.647,610,2.647,611,2.647,612,2.647,613,2.647,614,2.647,615,2.647,616,2.647,617,3.923,618,2.647]],["title/injectables/TimeoutInterceptor.html",[129,0.178,308,2.406]],["body/injectables/TimeoutInterceptor.html",[0,0.033,3,0.227,4,0.2,5,0.2,8,0.282,9,0.552,14,0.282,16,0.502,17,0.022,18,0.37,19,0.31,20,0.502,22,0.402,24,0.442,25,0.282,28,0.227,37,0.015,38,0.015,51,0.902,59,2.607,60,2.355,108,0.614,126,2.085,129,0.24,130,0.992,141,1.993,143,1.329,146,1.964,147,1.18,174,2.53,175,2.357,176,2.898,178,2.357,308,3.234,320,2.945,328,1.605,514,4.619,515,2.945,516,1.842,518,2.945,619,2.945,620,3.457,621,4.748,622,4.748,623,3.457,624,3.457,625,3.457,626,4.748,627,3.457]],["title/injectables/TransformInterceptor.html",[129,0.178,580,2.406]],["body/injectables/TransformInterceptor.html",[0,0.035,3,0.241,4,0.213,5,0.213,8,0.299,9,0.575,14,0.299,16,0.533,17,0.022,18,0.393,19,0.33,20,0.533,22,0.427,24,0.456,25,0.299,28,0.324,37,0.015,38,0.015,51,0.611,108,0.652,125,1.705,126,2.302,129,0.25,130,1.053,141,2.044,143,1.412,146,2.026,147,1.254,174,2.636,175,2.456,176,2.972,178,2.456,184,2.109,382,3.37,516,1.957,517,2.502,577,2.77,578,3.128,579,3.128,580,3.37,581,3.128,628,3.673]],["title/injectables/ValidationPipe.html",[129,0.178,288,2.406]],["body/injectables/ValidationPipe.html",[0,0.04,3,0.275,4,0.243,5,0.243,8,0.342,9,0.628,14,0.342,16,0.609,17,0.022,18,0.449,19,0.377,20,0.609,22,0.488,24,0.342,25,0.342,28,0.275,37,0.017,38,0.017,51,0.698,108,0.745,129,0.273,130,1.204,288,3.679,465,2.507,525,3.102,526,3.102,527,3.431,528,3.623,530,3.102,629,3.574,630,4.197,631,3.574]],["title/injectables/ValidationPipeV2.html",[129,0.178,292,2.406]],["body/injectables/ValidationPipeV2.html",[0,0.051,3,0.189,4,0.167,5,0.167,8,0.234,9,0.485,14,0.34,16,0.606,17,0.022,18,0.447,19,0.374,20,0.606,22,0.485,24,0.4,25,0.234,28,0.189,30,1.653,37,0.013,38,0.013,46,1.336,51,0.816,108,0.511,128,4.057,129,0.211,130,0.825,144,2.614,150,1.491,170,1.96,191,1.653,196,3.056,256,1.96,292,2.841,325,2.451,327,1.792,328,1.336,379,1.429,460,4.179,465,2.651,482,2.17,525,2.396,526,2.396,528,3.09,530,2.396,570,2.451,575,2.451,632,4.179,633,2.451,634,4.171,635,4.171,636,2.878,637,4.907,638,2.878,639,2.878,640,2.878,641,2.878,642,2.451,643,2.878,644,2.878,645,2.878,646,5.381,647,2.878,648,2.878,649,2.878,650,2.878,651,2.878,652,2.451,653,2.878,654,2.878,655,2.878,656,2.878]],["title/classes/ZodValidationPipi.html",[0,0.033,261,2.406]],["body/classes/ZodValidationPipi.html",[0,0.031,2,1.654,3,0.218,4,0.193,5,0.193,8,0.271,9,0.538,14,0.377,16,0.672,17,0.022,18,0.57,19,0.477,20,0.672,22,0.387,24,0.377,25,0.271,28,0.349,37,0.014,38,0.014,49,2.075,51,0.554,56,2.269,108,0.822,150,1.012,189,2.075,190,2.075,259,2.512,261,3.152,273,2.512,290,2.269,324,2.837,326,2.837,327,2.075,328,1.546,389,2.512,465,2.148,525,2.658,526,2.658,527,3.054,528,3.301,530,3.054,631,2.837,657,2.269,658,3.331,659,5.747,660,3.331,661,4.628,662,3.331,663,3.331,664,3.331,665,3.331,666,3.331,667,2.837,668,3.942,669,2.837,670,2.837,671,2.837]],["title/coverage.html",[672,3.634]],["body/coverage.html",[0,0.052,1,1.596,5,0.123,6,1.803,7,1.803,17,0.022,19,0.19,37,0.01,38,0.01,39,1.773,40,1.441,42,1.803,47,1.216,53,1.441,54,1.803,69,1.318,97,1.216,98,1.441,125,0.982,128,1.596,129,0.329,131,1.803,135,2.175,136,1.441,138,1.803,149,1.318,157,1.441,158,1.803,159,2.775,161,1.596,162,1.803,164,1.441,165,1.803,166,1.803,172,1.441,173,1.803,184,1.9,185,1.318,187,1.803,192,1.441,193,1.803,218,1.441,261,1.441,282,1.216,285,1.441,286,1.318,288,1.441,290,1.441,292,1.441,295,1.441,301,1.441,303,1.441,305,1.441,308,1.441,328,0.982,358,1.441,439,1.441,442,1.441,459,1.803,469,2.495,470,1.803,475,1.596,476,1.803,501,1.441,502,1.803,511,1.596,512,1.803,519,1.803,523,1.596,524,1.803,532,1.803,547,1.803,550,1.596,551,2.495,552,1.803,560,1.803,562,1.803,564,1.803,567,1.803,568,1.803,577,2.495,580,1.441,582,1.803,619,1.803,629,1.803,632,1.803,633,1.803,652,6.034,657,2.254,672,1.596,673,2.116,674,2.116,675,2.116,676,6.869,677,1.803,678,4.074,679,4.606,680,4.998,681,2.116,682,3.309,683,1.803,684,1.803,685,2.116,686,2.116]],["title/dependencies.html",[66,2.646,687,2.514]],["body/dependencies.html",[0,0.053,17,0.022,25,0.36,27,3.012,37,0.017,38,0.017,66,2.754,90,3.766,91,3.766,101,2.54,102,3.766,103,3.766,147,1.51,389,3.334,482,3.334,527,2.54,642,3.766,688,6.122,689,4.422,690,4.422,691,4.422,692,4.422,693,4.422,694,4.422,695,4.422,696,4.422,697,4.422,698,4.422]],["title/miscellaneous/functions.html",[699,1.695,700,3.619]],["body/miscellaneous/functions.html",[8,0.432,17,0.019,37,0.019,38,0.019,69,4.13,684,4.518,699,3.046,700,4.518,701,5.304]],["title/index.html",[8,0.24,702,2.952,703,2.952]],["body/index.html",[4,0.197,17,0.022,34,2.118,37,0.015,38,0.015,107,2.896,337,3.998,602,2.564,672,2.564,704,3.4,705,3.4,706,4.694,707,3.4,708,3.4,709,3.4,710,3.4,711,3.4,712,3.4,713,2.896,714,5.376,715,3.4,716,3.4,717,3.4,718,3.4,719,5.376,720,6.447,721,3.4,722,3.4,723,3.4,724,6.29,725,3.4,726,3.4,727,4.694,728,3.4,729,3.4,730,3.4,731,4.694,732,3.4,733,3.4,734,3.4,735,4.694,736,4.694,737,3.4,738,3.4,739,3.4,740,3.4,741,3.4,742,2.896,743,3.4,744,3.4,745,3.4,746,3.4,747,3.4,748,3.4,749,3.4,750,3.4,751,3.4,752,3.4,753,3.4,754,3.4,755,3.4,756,3.4,757,3.4,758,2.896]],["title/modules.html",[65,2.568]],["body/modules.html",[17,0.019,37,0.019,38,0.019,64,3.085,65,2.639,75,3.085,76,3.085,95,3.374,742,5.103,759,5.991,760,5.991,761,6.692,762,5.991,763,5.991]],["title/overview.html",[764,4.105]],["body/overview.html",[2,1.954,17,0.021,37,0.016,38,0.016,41,2.097,47,3.326,63,1.609,64,4.231,65,2.097,66,2.451,67,2.968,68,2.968,69,2.451,70,2.681,71,2.681,72,3.352,73,3.352,74,3.352,75,4.089,76,3.607,77,3.907,78,2.968,79,2.968,130,1.129,137,2.261,186,2.968,282,3.844,376,3.352,429,3.352,430,3.352,431,3.352,764,3.352,765,3.936,766,3.936,767,3.936,768,3.936,769,3.936]],["title/properties.html",[188,2.264,687,2.514]],["body/properties.html",[17,0.022,37,0.019,38,0.019,188,2.772,239,4.432,602,3.924,713,4.432,758,4.432,770,5.204,771,5.204]],["title/miscellaneous/typealiases.html",[699,1.695,772,4.249]],["body/miscellaneous/typealiases.html",[8,0.429,17,0.019,19,0.473,37,0.019,38,0.019,259,4.688,657,3.589,671,4.489,699,3.027,773,5.27,774,4.489]],["title/miscellaneous/variables.html",[699,1.695,775,3.619]],["body/miscellaneous/variables.html",[8,0.321,17,0.022,18,0.422,37,0.016,38,0.016,39,1.713,46,1.827,51,0.655,118,1.954,123,2.117,141,1.344,149,4.089,150,1.574,152,2.968,189,2.451,190,2.451,290,3.529,301,3.529,382,3.529,464,4.367,465,2.688,536,3.352,657,2.681,667,3.352,668,4.413,669,3.352,670,3.352,677,3.352,683,3.352,699,2.261,774,3.352,775,3.352,776,3.936,777,3.936,778,3.936,779,3.936,780,3.936,781,3.936,782,3.936]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":652,"title":{},"body":{"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["0.0.1",{"_index":770,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["0.1.5",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["1.10.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":573,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["10.0.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":767,"title":{},"body":{"overview.html":{}}}],["2",{"_index":769,"title":{},"body":{"overview.html":{}}}],["3",{"_index":766,"title":{},"body":{"overview.html":{}}}],["3.22.4",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{}}}],["4",{"_index":765,"title":{},"body":{"overview.html":{}}}],["4000",{"_index":418,"title":{},"body":{"controllers/CatsController.html":{}}}],["5",{"_index":376,"title":{},"body":{"controllers/CatsController.html":{},"overview.html":{}}}],["7",{"_index":768,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["account",{"_index":428,"title":{},"body":{"controllers/CatsController.html":{}}}],["action",{"_index":356,"title":{},"body":{"controllers/CatsController.html":{}}}],["add",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["age",{"_index":189,"title":{},"body":{"interfaces/CatInterFace.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allll",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["amazing",{"_index":743,"title":{},"body":{"index.html":{}}}],["app",{"_index":722,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":434,"title":{},"body":{"modules/CatsModule.html":{}}}],["app_guard",{"_index":436,"title":{},"body":{"modules/CatsModule.html":{}}}],["app_interceptor",{"_index":437,"title":{},"body":{"modules/CatsModule.html":{}}}],["app_pipe",{"_index":435,"title":{},"body":{"modules/CatsModule.html":{}}}],["appcontroller",{"_index":40,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appexception",{"_index":53,"title":{"classes/AppException.html":{}},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["applications",{"_index":712,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":47,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":528,"title":{},"body":{"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["argumentshost",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":655,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["async",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{},"controllers/DogController.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ValidationPipeV2.html":{}}}],["auth.guard",{"_index":300,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["auth.guard.ts",{"_index":159,"title":{},"body":{"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":160,"title":{},"body":{"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{}}}],["auth/auth.guard",{"_index":298,"title":{},"body":{"controllers/CatsController.html":{}}}],["auth/controller",{"_index":299,"title":{},"body":{"controllers/CatsController.html":{}}}],["auth/module",{"_index":441,"title":{},"body":{"modules/CatsModule.html":{}}}],["auth/roles/roles.decorator",{"_index":302,"title":{},"body":{"controllers/CatsController.html":{}}}],["auth/roles/roles.guard",{"_index":304,"title":{},"body":{"controllers/CatsController.html":{}}}],["authen",{"_index":171,"title":{},"body":{"injectables/AuthenMiddleware.html":{},"guards/RoleGuard.html":{}}}],["authenmiddleware",{"_index":98,"title":{"injectables/AuthenMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"coverage.html":{}}}],["authentication",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{}}}],["authguard",{"_index":136,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["authguardcontroller",{"_index":157,"title":{"guards/AuthGuardController.html":{}},"body":{"guards/AuthGuardController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["authguardglobal",{"_index":161,"title":{"guards/AuthGuardGlobal.html":{}},"body":{"guards/AuthGuardGlobal.html":{},"coverage.html":{}}}],["authguardmodule",{"_index":164,"title":{"guards/AuthGuardModule.html":{}},"body":{"guards/AuthGuardModule.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["author",{"_index":602,"title":{},"body":{"guards/RoleGuard.html":{},"index.html":{},"properties.html":{}}}],["available",{"_index":763,"title":{},"body":{"modules.html":{}}}],["await",{"_index":325,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipeV2.html":{}}}],["backers",{"_index":744,"title":{},"body":{"index.html":{}}}],["bad",{"_index":352,"title":{},"body":{"controllers/CatsController.html":{}}}],["badgatewayexception",{"_index":273,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ZodValidationPipi.html":{}}}],["badgatewayexception('somthing",{"_index":351,"title":{},"body":{"controllers/CatsController.html":{}}}],["badgatewayexception('validation",{"_index":665,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["badrequestexception",{"_index":570,"title":{},"body":{"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipeV2.html":{}}}],["badrequestexception('validation",{"_index":575,"title":{},"body":{"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipeV2.html":{}}}],["baseexceptionfilter",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["before",{"_index":370,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["between",{"_index":362,"title":{},"body":{"controllers/CatsController.html":{}}}],["body",{"_index":272,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"controllers/CatsController.html":{},"guards/RoleGuard.html":{},"injectables/ValidationPipeV2.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":190,"title":{},"body":{"interfaces/CatInterFace.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":761,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":759,"title":{},"body":{"modules.html":{}}}],["building",{"_index":707,"title":{},"body":{"index.html":{}}}],["c",{"_index":317,"title":{},"body":{"controllers/CatsController.html":{},"guards/RoleGuard.html":{}}}],["cacheinterceptor",{"_index":172,"title":{"injectables/CacheInterceptor.html":{}},"body":{"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["callhandler",{"_index":176,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"guards/RoleGuard.html":{}}}],["cat",{"_index":358,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDtoV2.html":{},"coverage.html":{}}}],["cat.dto",{"_index":281,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":470,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:4",{"_index":473,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":471,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:6",{"_index":472,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat/cats.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["catch",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(error",{"_index":326,"title":{},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{}}}],["catch(exception",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":535,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":515,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror(err",{"_index":518,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catinterface",{"_index":185,"title":{"interfaces/CatInterFace.html":{}},"body":{"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cats",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":438,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.services",{"_index":283,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/hisdf_sfslo",{"_index":365,"title":{},"body":{"controllers/CatsController.html":{}}}],["catscontroller",{"_index":192,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catservice",{"_index":321,"title":{},"body":{"controllers/CatsController.html":{}}}],["catsmodule",{"_index":75,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":282,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["cause",{"_index":333,"title":{},"body":{"controllers/CatsController.html":{}}}],["ch",{"_index":344,"title":{},"body":{"controllers/CatsController.html":{}}}],["charracters",{"_index":363,"title":{},"body":{"controllers/CatsController.html":{}}}],["check",{"_index":601,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cho",{"_index":315,"title":{},"body":{"controllers/CatsController.html":{}}}],["chỉnh",{"_index":611,"title":{},"body":{"guards/RoleGuard.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AppException.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"classes/ZodValidationPipi.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AppException.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"classes/ZodValidationPipi.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":429,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":430,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":431,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["configure",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["configure(consumer",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["console.log",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{}}}],["console.log('before",{"_index":555,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["console.log('cache",{"_index":179,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["console.log('decorator",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('do",{"_index":59,"title":{},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"injectables/TimeoutInterceptor.html":{}}}],["console.log('exception",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}}}],["console.log('get",{"_index":412,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('global",{"_index":531,"title":{},"body":{"injectables/GlobalValidation.html":{}}}],["console.log('host",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["console.log('in",{"_index":170,"title":{},"body":{"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ValidationPipeV2.html":{}}}],["console.log('into",{"_index":350,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('middleware",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('module",{"_index":566,"title":{},"body":{"injectables/ModuleValidation.html":{}}}],["console.log('params",{"_index":387,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('plain",{"_index":648,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["console.log('user",{"_index":423,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(`after",{"_index":558,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["console.log(createcatdto",{"_index":355,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(flag",{"_index":409,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(id",{"_index":385,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(next",{"_index":336,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(request",{"_index":335,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(roles",{"_index":595,"title":{},"body":{"guards/RoleGuard.html":{}}}],["console.log(value",{"_index":631,"title":{},"body":{"injectables/ValidationPipe.html":{},"classes/ZodValidationPipi.html":{}}}],["const",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/DatabaseModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"classes/AppException.html":{},"classes/ForbiddenException.html":{},"guards/RoleGuard.html":{},"classes/ZodValidationPipi.html":{}}}],["constructor(private",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"guards/RoleGuard.html":{},"classes/ZodValidationPipi.html":{}}}],["constructor(reflector",{"_index":584,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(schema",{"_index":658,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["consumer",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["consumer.apply(authenmiddleware",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(helmet",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["content",{"_index":339,"title":{},"body":{"controllers/CatsController.html":{}}}],["context",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.gethandler",{"_index":594,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"guards/RoleGuard.html":{}}}],["control",{"_index":213,"title":{},"body":{"controllers/CatsController.html":{}}}],["controler",{"_index":388,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":39,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/DogController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuardController.html":{},"controllers/CatsController.html":{},"controllers/DogController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller('cats",{"_index":311,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('dog",{"_index":506,"title":{},"body":{"controllers/DogController.html":{}}}],["controllers",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"overview.html":{}}}],["convert",{"_index":380,"title":{},"body":{"controllers/CatsController.html":{}}}],["coverage",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":357,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(cat",{"_index":461,"title":{},"body":{"injectables/CatsService.html":{}}}],["createcat",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcat(@body",{"_index":348,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcat(createcatbody",{"_index":211,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatbody",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":218,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createcatdtov2",{"_index":475,"title":{"classes/CreateCatDtoV2.html":{}},"body":{"classes/CreateCatDtoV2.html":{},"coverage.html":{}}}],["createcatdtovalid",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/typealiases.html":{}}}],["createcate",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcate(@body",{"_index":354,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcate(createcatdto",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatschema",{"_index":290,"title":{},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createparamdecorator",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":536,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":539,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":538,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customer",{"_index":331,"title":{},"body":{"controllers/CatsController.html":{}}}],["các",{"_index":456,"title":{},"body":{"modules/CatsModule.html":{}}}],["data",{"_index":382,"title":{},"body":{"controllers/CatsController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":95,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{}}}],["databasemodule.forroot([user",{"_index":500,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["date().toisostring",{"_index":545,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.now",{"_index":557,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["decision",{"_index":499,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorator",{"_index":422,"title":{},"body":{"controllers/CatsController.html":{}}}],["decorator/user.decorator",{"_index":310,"title":{},"body":{"controllers/CatsController.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDtoV2.html":{},"controllers/DogController.html":{}}}],["default",{"_index":464,"title":{},"body":{"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":713,"title":{},"body":{"index.html":{},"properties.html":{}}}],["description:'some",{"_index":353,"title":{},"body":{"controllers/CatsController.html":{}}}],["design",{"_index":498,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["development",{"_index":723,"title":{},"body":{"index.html":{}}}],["devtoolsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["devtoolsmodule.register",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":503,"title":{},"body":{"controllers/DogController.html":{}}}],["dog.controller",{"_index":509,"title":{},"body":{"modules/DogModule.html":{}}}],["dog/dog.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["dogcontroller",{"_index":501,"title":{"controllers/DogController.html":{}},"body":{"controllers/DogController.html":{},"modules/DogModule.html":{},"coverage.html":{}}}],["dogmodule",{"_index":76,"title":{"modules/DogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DogModule.html":{},"modules.html":{},"overview.html":{}}}],["domain",{"_index":425,"title":{},"body":{"controllers/CatsController.html":{}}}],["dto/create",{"_index":280,"title":{},"body":{"controllers/CatsController.html":{}}}],["duy",{"_index":345,"title":{},"body":{"controllers/CatsController.html":{}}}],["dynamicmodule",{"_index":491,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dùng",{"_index":314,"title":{},"body":{"controllers/CatsController.html":{}}}],["e2e",{"_index":732,"title":{},"body":{"index.html":{}}}],["each",{"_index":405,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["efficient",{"_index":708,"title":{},"body":{"index.html":{}}}],["entities",{"_index":489,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["err",{"_index":626,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":330,"title":{},"body":{"controllers/CatsController.html":{}}}],["errors",{"_index":649,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["errorsinterceptor",{"_index":511,"title":{"injectables/ErrorsInterceptor.html":{}},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["everything",{"_index":496,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["everywhre",{"_index":446,"title":{},"body":{"modules/CatsModule.html":{}}}],["ex",{"_index":364,"title":{},"body":{"controllers/CatsController.html":{}}}],["example",{"_index":719,"title":{},"body":{"index.html":{}}}],["exception",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":540,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":533,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptions",{"_index":287,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:6",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exclude",{"_index":453,"title":{},"body":{"modules/CatsModule.html":{}}}],["executioncontext",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["expect",{"_index":383,"title":{},"body":{"controllers/CatsController.html":{}}}],["export",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["exports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"overview.html":{}}}],["express",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AppException.html":{},"classes/ForbiddenException.html":{}}}],["faile",{"_index":653,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["failed",{"_index":666,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["failer",{"_index":576,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["false",{"_index":617,"title":{},"body":{"guards/RoleGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{}}}],["filed",{"_index":606,"title":{},"body":{"guards/RoleGuard.html":{}}}],["filer",{"_index":341,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["find",{"_index":366,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findall(@req",{"_index":322,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall(request",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{}}}],["findalldog",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{}}}],["findalldog(@req",{"_index":334,"title":{},"body":{"controllers/CatsController.html":{}}}],["findalldog(request",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["findhello",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param('id",{"_index":378,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["findvalidation",{"_index":202,"title":{},"body":{"controllers/CatsController.html":{}}}],["findvalidation(@param('id",{"_index":386,"title":{},"body":{"controllers/CatsController.html":{}}}],["findvalidation(id",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["flag",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["forbiddenexception",{"_index":285,"title":{"classes/ForbiddenException.html":{}},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"coverage.html":{}}}],["forbiden",{"_index":521,"title":{},"body":{"classes/ForbiddenException.html":{},"guards/RoleGuard.html":{}}}],["forroot",{"_index":485,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["forroot(entities",{"_index":486,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["forroutes",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes(catscontroller",{"_index":458,"title":{},"body":{"modules/CatsModule.html":{}}}],["forroutes(dogcontroller",{"_index":510,"title":{},"body":{"modules/DogModule.html":{}}}],["framework",{"_index":706,"title":{},"body":{"index.html":{}}}],["function",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["functions",{"_index":700,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('decorator",{"_index":420,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('decorator')@useguards(authguard",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs",{"_index":372,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs')@redirect('https://docs.nestjs.com",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('dog",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('hi*lo",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('pareseint/:id",{"_index":397,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('pareseint/:id')@roles(['admin'])@useguards(roleguard",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('query",{"_index":403,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('query')@useguards(authguard)@useinterceptors(cacheinterceptor",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('redirect",{"_index":368,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('redirect')@redirect('/cats",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('test/:id",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('timeout",{"_index":410,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('timeout')@useguards(authguard)@useinterceptors(timeoutinterceptor",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('validation/:id",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(@query('version",{"_index":374,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(version",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdog",{"_index":504,"title":{},"body":{"controllers/DogController.html":{}}}],["gethello",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@hostparam('account",{"_index":427,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquery",{"_index":204,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquery(id",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquerydecorator",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquerydecorator(id",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquerytimeout",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{}}}],["getquerytimeout(id",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["getting",{"_index":702,"title":{"index.html":{}},"body":{}}],["global",{"_index":163,"title":{},"body":{"guards/AuthGuardGlobal.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"injectables/LoggingGlobalInterceptor.html":{}}}],["global.interceptor.ts",{"_index":552,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"coverage.html":{}}}],["global.interceptor.ts:7",{"_index":553,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{}}}],["globalvalidation",{"_index":523,"title":{"injectables/GlobalValidation.html":{}},"body":{"injectables/GlobalValidation.html":{},"coverage.html":{}}}],["good",{"_index":497,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["graph",{"_index":762,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":739,"title":{},"body":{"index.html":{}}}],["guard",{"_index":135,"title":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"coverage.html":{}}}],["guards",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["handle",{"_index":517,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handler",{"_index":384,"title":{},"body":{"controllers/CatsController.html":{}}}],["header",{"_index":267,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":340,"title":{},"body":{"controllers/CatsController.html":{}}}],["hello",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["here",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ModuleValidation.html":{},"index.html":{}}}],["hi*lo",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["hilloooo",{"_index":367,"title":{},"body":{"controllers/CatsController.html":{}}}],["host",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":537,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hostparam",{"_index":271,"title":{},"body":{"controllers/CatsController.html":{}}}],["http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":266,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":338,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":55,"title":{},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":286,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://docs.nestjs.com/v5",{"_index":377,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://nestjs.com",{"_index":755,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":58,"title":{},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.forbidden",{"_index":62,"title":{},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["huy",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["id",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["if(!metatype",{"_index":644,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["if(!roles",{"_index":596,"title":{},"body":{"guards/RoleGuard.html":{}}}],["if(errors.length",{"_index":651,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["if(isnan(val",{"_index":574,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["if(version",{"_index":375,"title":{},"body":{"controllers/CatsController.html":{}}}],["implements",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"controllers/DogController.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["injectable",{"_index":129,"title":{"injectables/AppService.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["injectables",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"injectables/CatsService.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"overview.html":{}}}],["installation",{"_index":718,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":721,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":627,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["int",{"_index":402,"title":{},"body":{"controllers/CatsController.html":{}}}],["int.pipe",{"_index":297,"title":{},"body":{"controllers/CatsController.html":{}}}],["int.pipe.ts",{"_index":568,"title":{},"body":{"injectables/ParseIntPipeV2.html":{},"coverage.html":{}}}],["int.pipe.ts:5",{"_index":569,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["integration",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["intercept",{"_index":174,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":175,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":320,"title":{},"body":{"controllers/CatsController.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor/cache.interceptor",{"_index":307,"title":{},"body":{"controllers/CatsController.html":{}}}],["interceptor/logger",{"_index":443,"title":{},"body":{"modules/CatsModule.html":{}}}],["interceptor/logger.interceptor",{"_index":306,"title":{},"body":{"controllers/CatsController.html":{}}}],["interceptor/timeout.interceptor",{"_index":309,"title":{},"body":{"controllers/CatsController.html":{}}}],["interface",{"_index":184,"title":{"interfaces/CatInterFace.html":{},"interfaces/Response.html":{}},"body":{"interfaces/CatInterFace.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":186,"title":{},"body":{"interfaces/CatInterFace.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/cats.interfaces",{"_index":284,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["iscached",{"_index":180,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["isint",{"_index":477,"title":{},"body":{"classes/CreateCatDtoV2.html":{}}}],["isstring",{"_index":479,"title":{},"body":{"classes/CreateCatDtoV2.html":{}}}],["join",{"_index":746,"title":{},"body":{"index.html":{}}}],["json",{"_index":542,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["kamil",{"_index":752,"title":{},"body":{"index.html":{}}}],["khi",{"_index":599,"title":{},"body":{"guards/RoleGuard.html":{}}}],["l",{"_index":618,"title":{},"body":{"guards/RoleGuard.html":{}}}],["legend",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["license",{"_index":758,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":736,"title":{},"body":{"index.html":{}}}],["loggermiddleware",{"_index":97,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggingglobalinterceptor",{"_index":550,"title":{"injectables/LoggingGlobalInterceptor.html":{}},"body":{"injectables/LoggingGlobalInterceptor.html":{},"coverage.html":{}}}],["logginginterceptor",{"_index":305,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["loggingmoduleinterceptor",{"_index":442,"title":{"injectables/LoggingModuleInterceptor.html":{}},"body":{"modules/CatsModule.html":{},"injectables/LoggingModuleInterceptor.html":{},"coverage.html":{}}}],["loại",{"_index":454,"title":{},"body":{"modules/CatsModule.html":{}}}],["lỗi",{"_index":613,"title":{},"body":{"guards/RoleGuard.html":{}}}],["make",{"_index":445,"title":{},"body":{"modules/CatsModule.html":{}}}],["making",{"_index":495,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["map",{"_index":579,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":583,"title":{},"body":{"guards/RoleGuard.html":{}}}],["matchroles(roles",{"_index":588,"title":{},"body":{"guards/RoleGuard.html":{}}}],["mentioned",{"_index":494,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["message",{"_index":332,"title":{},"body":{"controllers/CatsController.html":{}}}],["metadata",{"_index":527,"title":{},"body":{"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"classes/ZodValidationPipi.html":{},"dependencies.html":{}}}],["metatype",{"_index":637,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["method",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["methods",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["middleware",{"_index":549,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["middlewareconsumer",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["middlewares",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["middlw",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":699,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":735,"title":{},"body":{"index.html":{}}}],["mode",{"_index":727,"title":{},"body":{"index.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuardModule.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"injectables/LoggingModuleInterceptor.html":{},"overview.html":{}}}],["module.interceptor",{"_index":444,"title":{},"body":{"modules/CatsModule.html":{}}}],["module.interceptor.ts",{"_index":562,"title":{},"body":{"injectables/LoggingModuleInterceptor.html":{},"coverage.html":{}}}],["module.interceptor.ts:7",{"_index":563,"title":{},"body":{"injectables/LoggingModuleInterceptor.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"modules.html":{},"overview.html":{}}}],["modulevalidation",{"_index":439,"title":{"injectables/ModuleValidation.html":{}},"body":{"modules/CatsModule.html":{},"injectables/ModuleValidation.html":{},"coverage.html":{}}}],["more",{"_index":749,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":753,"title":{},"body":{"index.html":{}}}],["mặc",{"_index":615,"title":{},"body":{"guards/RoleGuard.html":{}}}],["n",{"_index":600,"title":{},"body":{"guards/RoleGuard.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":714,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":757,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":178,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CatsModule.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/devtools",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":169,"title":{},"body":{"injectables/AuthenMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DogModule.html":{}}}],["new",{"_index":328,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ErrorsInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{}}}],["next",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle",{"_index":183,"title":{},"body":{"injectables/CacheInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["next.handle().pipe",{"_index":624,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["nextfunction",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{}}}],["nh",{"_index":616,"title":{},"body":{"guards/RoleGuard.html":{}}}],["nhưng",{"_index":614,"title":{},"body":{"guards/RoleGuard.html":{}}}],["nhất",{"_index":346,"title":{},"body":{"controllers/CatsController.html":{}}}],["node.js",{"_index":705,"title":{},"body":{"index.html":{}}}],["none",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["now",{"_index":556,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["now}ms",{"_index":559,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["number",{"_index":191,"title":{},"body":{"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipeV2.html":{}}}],["này",{"_index":347,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["nén",{"_index":612,"title":{},"body":{"guards/RoleGuard.html":{}}}],["object",{"_index":646,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["observable",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["once",{"_index":448,"title":{},"body":{"modules/CatsModule.html":{}}}],["open",{"_index":737,"title":{},"body":{"index.html":{}}}],["option",{"_index":487,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":764,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":687,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":270,"title":{},"body":{"controllers/CatsController.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["params",{"_index":381,"title":{},"body":{"controllers/CatsController.html":{}}}],["parse",{"_index":401,"title":{},"body":{"controllers/CatsController.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{}}}],["parseboolpipe",{"_index":276,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint(@param('id",{"_index":400,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint(id",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint(value",{"_index":572,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["parseintpipe",{"_index":275,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseintpipev2",{"_index":295,"title":{"injectables/ParseIntPipeV2.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ParseIntPipeV2.html":{},"coverage.html":{}}}],["pass",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{}}}],["path",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["pipe",{"_index":379,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ValidationPipeV2.html":{}}}],["pipe(map(data",{"_index":581,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["pipe/class",{"_index":293,"title":{},"body":{"controllers/CatsController.html":{}}}],["pipe/module.validation.pipe",{"_index":440,"title":{},"body":{"modules/CatsModule.html":{}}}],["pipe/parse",{"_index":296,"title":{},"body":{"controllers/CatsController.html":{}}}],["pipe/validation.pipe",{"_index":289,"title":{},"body":{"controllers/CatsController.html":{}}}],["pipe/zod.validation.pipi",{"_index":291,"title":{},"body":{"controllers/CatsController.html":{}}}],["pipetransform",{"_index":530,"title":{},"body":{"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["plaintoinstance",{"_index":641,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["plaintoinstance(metatype",{"_index":647,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["please",{"_index":747,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":720,"title":{},"body":{"index.html":{}}}],["post",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('class",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('create",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('validation",{"_index":390,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('validation')@usepipes(new",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@header('cache",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["postclassvalidation",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["postclassvalidation(@body(new",{"_index":395,"title":{},"body":{"controllers/CatsController.html":{}}}],["postclassvalidation(createcatdto",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{}}}],["postvalidation",{"_index":209,"title":{},"body":{"controllers/CatsController.html":{}}}],["postvalidation(@body",{"_index":393,"title":{},"body":{"controllers/CatsController.html":{}}}],["postvalidation(createcatdto",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{},"controllers/DogController.html":{}}}],["private",{"_index":460,"title":{},"body":{"injectables/CatsService.html":{},"injectables/ValidationPipeV2.html":{}}}],["process.env.node_env",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":704,"title":{},"body":{"index.html":{}}}],["project",{"_index":738,"title":{},"body":{"index.html":{}}}],["promise",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"controllers/CatsController.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"guards/RoleGuard.html":{}}}],["promise((resovle",{"_index":414,"title":{},"body":{"controllers/CatsController.html":{}}}],["promise.all([testpromise",{"_index":419,"title":{},"body":{"controllers/CatsController.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"interfaces/CatInterFace.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"interfaces/Response.html":{},"properties.html":{}}}],["provide",{"_index":449,"title":{},"body":{"modules/CatsModule.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/DatabaseModule.html":{},"overview.html":{}}}],["qua",{"_index":604,"title":{},"body":{"guards/RoleGuard.html":{}}}],["query",{"_index":269,"title":{},"body":{"controllers/CatsController.html":{}}}],["query('flag",{"_index":408,"title":{},"body":{"controllers/CatsController.html":{}}}],["query('id",{"_index":407,"title":{},"body":{"controllers/CatsController.html":{}}}],["re",{"_index":371,"title":{},"body":{"controllers/CatsController.html":{}}}],["read",{"_index":748,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/CatsService.html":{}}}],["redirect",{"_index":268,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('/cats",{"_index":369,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('https://docs.nestjs.com",{"_index":373,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirectaction",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{}}}],["redis",{"_index":182,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["reflect",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":585,"title":{},"body":{"guards/RoleGuard.html":{}}}],["reflector.createdecorator",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":447,"title":{},"body":{"modules/CatsModule.html":{}}}],["reject",{"_index":415,"title":{},"body":{"controllers/CatsController.html":{}}}],["repository",{"_index":717,"title":{},"body":{"index.html":{}}}],["req",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["request.url",{"_index":546,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["requestmethod.all",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":457,"title":{},"body":{"modules/CatsModule.html":{}}}],["requesttimeoutexception",{"_index":621,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["required",{"_index":670,"title":{},"body":{"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["resovle('test",{"_index":417,"title":{},"body":{"controllers/CatsController.html":{}}}],["response",{"_index":125,"title":{"interfaces/Response.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["roleguard",{"_index":303,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/CatsController.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":301,"title":{},"body":{"controllers/CatsController.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(['admin",{"_index":398,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.decorator",{"_index":592,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route",{"_index":359,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["routing",{"_index":426,"title":{},"body":{"controllers/CatsController.html":{}}}],["run",{"_index":724,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":516,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":603,"title":{},"body":{"guards/RoleGuard.html":{}}}],["scalable",{"_index":709,"title":{},"body":{"index.html":{}}}],["schema",{"_index":661,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["scope",{"_index":493,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["server",{"_index":710,"title":{},"body":{"index.html":{}}}],["set",{"_index":492,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["settimeout",{"_index":416,"title":{},"body":{"controllers/CatsController.html":{}}}],["side",{"_index":711,"title":{},"body":{"index.html":{}}}],["somthing",{"_index":60,"title":{},"body":{"classes/AppException.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/AppException.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"controllers/DogController.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"classes/ForbiddenException.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"index.html":{}}}],["sponsors",{"_index":741,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../zod.validation.pipi.ts",{"_index":774,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:25",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":132,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.guard.ts",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:6",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/controller",{"_index":158,"title":{},"body":{"guards/AuthGuardController.html":{},"coverage.html":{}}}],["src/auth/global",{"_index":162,"title":{},"body":{"guards/AuthGuardGlobal.html":{},"coverage.html":{}}}],["src/auth/module",{"_index":165,"title":{},"body":{"guards/AuthGuardModule.html":{},"coverage.html":{}}}],["src/auth/roles/roles.decorator.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/roles/roles.guard.ts",{"_index":582,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/auth/roles/roles.guard.ts:10",{"_index":587,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/roles/roles.guard.ts:26",{"_index":590,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/roles/roles.guard.ts:7",{"_index":586,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/cat/cats.controller.ts",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cat/cats.controller.ts:102",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:111",{"_index":262,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:117",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:125",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:134",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:147",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:172",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:31",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:46",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:56",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:65",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:72",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:78",{"_index":264,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:85",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.controller.ts:94",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cat/cats.module.ts",{"_index":432,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cat/cats.module.ts:38",{"_index":433,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cat/cats.services.ts",{"_index":459,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cat/cats.services.ts:12",{"_index":463,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cat/cats.services.ts:6",{"_index":466,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cat/cats.services.ts:8",{"_index":462,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cat/dto/create",{"_index":469,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"coverage.html":{}}}],["src/cat/interfaces/cats.interfaces.ts",{"_index":187,"title":{},"body":{"interfaces/CatInterFace.html":{},"coverage.html":{}}}],["src/cat/pipe/class",{"_index":632,"title":{},"body":{"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["src/cat/pipe/global.validation.pipe.ts",{"_index":524,"title":{},"body":{"injectables/GlobalValidation.html":{},"coverage.html":{}}}],["src/cat/pipe/global.validation.pipe.ts:5",{"_index":529,"title":{},"body":{"injectables/GlobalValidation.html":{}}}],["src/cat/pipe/module.validation.pipe.ts",{"_index":564,"title":{},"body":{"injectables/ModuleValidation.html":{},"coverage.html":{}}}],["src/cat/pipe/module.validation.pipe.ts:5",{"_index":565,"title":{},"body":{"injectables/ModuleValidation.html":{}}}],["src/cat/pipe/parse",{"_index":567,"title":{},"body":{"injectables/ParseIntPipeV2.html":{},"coverage.html":{}}}],["src/cat/pipe/validation.pipe.ts",{"_index":629,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/cat/pipe/validation.pipe.ts:5",{"_index":630,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/cat/pipe/zod.validation.pipi.ts",{"_index":657,"title":{},"body":{"classes/ZodValidationPipi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cat/pipe/zod.validation.pipi.ts:4",{"_index":660,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["src/cat/pipe/zod.validation.pipi.ts:7",{"_index":662,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["src/database/database.module.ts",{"_index":483,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.module.ts:8",{"_index":488,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/decorator/user.decorator.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dog/dog.controller.ts",{"_index":502,"title":{},"body":{"controllers/DogController.html":{},"coverage.html":{}}}],["src/dog/dog.controller.ts:7",{"_index":505,"title":{},"body":{"controllers/DogController.html":{}}}],["src/dog/dog.module.ts",{"_index":507,"title":{},"body":{"modules/DogModule.html":{}}}],["src/dog/dog.module.ts:9",{"_index":508,"title":{},"body":{"modules/DogModule.html":{}}}],["src/exceptions/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/exceptions/app.exception.ts",{"_index":54,"title":{},"body":{"classes/AppException.html":{},"coverage.html":{}}}],["src/exceptions/app.exception.ts:3",{"_index":57,"title":{},"body":{"classes/AppException.html":{}}}],["src/exceptions/exception.filter.ts",{"_index":532,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/exceptions/exception.filter.ts:6",{"_index":534,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/exceptions/forbidden.exception.ts",{"_index":519,"title":{},"body":{"classes/ForbiddenException.html":{},"coverage.html":{}}}],["src/exceptions/forbidden.exception.ts:3",{"_index":520,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["src/interceptor/cache.interceptor.ts",{"_index":173,"title":{},"body":{"injectables/CacheInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/cache.interceptor.ts:6",{"_index":177,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["src/interceptor/errors.interceptor.ts",{"_index":512,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/errors.interceptor.ts:13",{"_index":513,"title":{},"body":{"injectables/ErrorsInterceptor.html":{}}}],["src/interceptor/logger",{"_index":551,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/logger.interceptor.ts",{"_index":560,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/logger.interceptor.ts:7",{"_index":561,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/interceptor/timeout.interceptor.ts",{"_index":619,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/timeout.interceptor.ts:7",{"_index":620,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/interceptor/transform.interceptor.ts",{"_index":577,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/transform.interceptor.ts:11",{"_index":628,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/authen.middleware.ts",{"_index":166,"title":{},"body":{"injectables/AuthenMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/authen.middleware.ts:6",{"_index":168,"title":{},"body":{"injectables/AuthenMiddleware.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":547,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts:6",{"_index":548,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["start",{"_index":725,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":728,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":729,"title":{},"body":{"index.html":{}}}],["started",{"_index":703,"title":{"index.html":{}},"body":{}}],["starter",{"_index":716,"title":{},"body":{"index.html":{}}}],["statements",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":484,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["status",{"_index":329,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["status(status",{"_index":541,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":543,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":750,"title":{},"body":{"index.html":{}}}],["strict",{"_index":474,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["string",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipeV2.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":424,"title":{},"body":{"controllers/CatsController.html":{}}}],["super('error",{"_index":61,"title":{},"body":{"classes/AppException.html":{}}}],["super('forbidden",{"_index":522,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["super.catch(exception",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["support",{"_index":742,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":760,"title":{},"body":{"modules.html":{}}}],["t",{"_index":578,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":554,"title":{},"body":{"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{}}}],["test",{"_index":337,"title":{},"body":{"controllers/CatsController.html":{},"index.html":{}}}],["test:covsupport",{"_index":734,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":733,"title":{},"body":{"index.html":{}}}],["testpromise",{"_index":413,"title":{},"body":{"controllers/CatsController.html":{}}}],["tests",{"_index":731,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":740,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":468,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":467,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catservice.create(createcatbody",{"_index":349,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.create(createcatdto",{"_index":394,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.findall",{"_index":323,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.matchroles(roles",{"_index":608,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.reflector.get(roles",{"_index":593,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.schema.parse(value",{"_index":664,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["this.tovalidate(metatype",{"_index":645,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["throw",{"_index":327,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ParseIntPipeV2.html":{},"guards/RoleGuard.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["throwerror",{"_index":514,"title":{},"body":{"injectables/ErrorsInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["thường",{"_index":597,"title":{},"body":{"guards/RoleGuard.html":{}}}],["timeout",{"_index":623,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(5000",{"_index":625,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":622,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":308,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"controllers/CatsController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":544,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":751,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":634,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["tovalidate(metatype",{"_index":635,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["tr",{"_index":455,"title":{},"body":{"modules/CatsModule.html":{}}}],["transform",{"_index":525,"title":{},"body":{"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["transform(value",{"_index":526,"title":{},"body":{"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{}}}],["transformer",{"_index":642,"title":{},"body":{"injectables/ValidationPipeV2.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":580,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["trigger",{"_index":452,"title":{},"body":{"modules/CatsModule.html":{}}}],["trong",{"_index":607,"title":{},"body":{"guards/RoleGuard.html":{}}}],["true",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/CacheInterceptor.html":{},"modules/DatabaseModule.html":{},"guards/RoleGuard.html":{}}}],["try",{"_index":324,"title":{},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{}}}],["trước",{"_index":598,"title":{},"body":{"guards/RoleGuard.html":{}}}],["twitter",{"_index":756,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuardController.html":{},"guards/AuthGuardGlobal.html":{},"guards/AuthGuardModule.html":{},"injectables/AuthenMiddleware.html":{},"injectables/CacheInterceptor.html":{},"interfaces/CatInterFace.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDtoV2.html":{},"modules/DatabaseModule.html":{},"modules/DogModule.html":{},"injectables/ErrorsInterceptor.html":{},"injectables/GlobalValidation.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingGlobalInterceptor.html":{},"injectables/LoggingInterceptor.html":{},"injectables/LoggingModuleInterceptor.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"interfaces/Response.html":{},"guards/RoleGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":772,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":654,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["types.includes(metatype",{"_index":656,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["typescript",{"_index":715,"title":{},"body":{"index.html":{}}}],["tùy",{"_index":610,"title":{},"body":{"guards/RoleGuard.html":{}}}],["tại",{"_index":342,"title":{},"body":{"controllers/CatsController.html":{}}}],["tất",{"_index":316,"title":{},"body":{"controllers/CatsController.html":{}}}],["unauthorizedexception",{"_index":591,"title":{},"body":{"guards/RoleGuard.html":{}}}],["undefined",{"_index":638,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["unit",{"_index":730,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{},"controllers/DogController.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ValidationPipeV2.html":{}}}],["unlicensed",{"_index":771,"title":{},"body":{"properties.html":{}}}],["url",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{}}}],["use",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"classes/CreateCatDto.html":{},"modules/DatabaseModule.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["use(req",{"_index":167,"title":{},"body":{"injectables/AuthenMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":451,"title":{},"body":{"modules/CatsModule.html":{}}}],["usefilters",{"_index":274,"title":{},"body":{"controllers/CatsController.html":{}}}],["usefilters(httpexceptionfilter",{"_index":313,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards",{"_index":277,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(authguard",{"_index":404,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(new",{"_index":312,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(roleguard",{"_index":399,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors",{"_index":278,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":406,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(logginginterceptor",{"_index":319,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(timeoutinterceptor",{"_index":411,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes",{"_index":279,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":391,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user('name",{"_index":421,"title":{},"body":{"controllers/CatsController.html":{}}}],["user.roles",{"_index":609,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user?.[data",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useroles",{"_index":589,"title":{},"body":{"guards/RoleGuard.html":{}}}],["using",{"_index":361,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["v",{"_index":605,"title":{},"body":{"guards/RoleGuard.html":{}}}],["v2",{"_index":643,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["v2.dto.ts",{"_index":476,"title":{},"body":{"classes/CreateCatDtoV2.html":{},"coverage.html":{}}}],["v2.dto.ts:11",{"_index":480,"title":{},"body":{"classes/CreateCatDtoV2.html":{}}}],["v2.dto.ts:5",{"_index":481,"title":{},"body":{"classes/CreateCatDtoV2.html":{}}}],["v2.dto.ts:8",{"_index":478,"title":{},"body":{"classes/CreateCatDtoV2.html":{}}}],["val",{"_index":571,"title":{},"body":{"injectables/ParseIntPipeV2.html":{}}}],["valid",{"_index":396,"title":{},"body":{"controllers/CatsController.html":{}}}],["validate",{"_index":640,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["validate(object",{"_index":650,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["validation",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ValidationPipeV2.html":{}}}],["validation.validation.pipe",{"_index":294,"title":{},"body":{"controllers/CatsController.html":{}}}],["validation.validation.pipe.ts",{"_index":633,"title":{},"body":{"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["validation.validation.pipe.ts:22",{"_index":636,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["validation.validation.pipe.ts:7",{"_index":639,"title":{},"body":{"injectables/ValidationPipeV2.html":{}}}],["validationpipe",{"_index":288,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipev2",{"_index":292,"title":{"injectables/ValidationPipeV2.html":{}},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipeV2.html":{},"coverage.html":{}}}],["validator",{"_index":482,"title":{},"body":{"classes/CreateCatDtoV2.html":{},"injectables/ValidationPipeV2.html":{},"dependencies.html":{}}}],["value",{"_index":465,"title":{},"body":{"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"injectables/GlobalValidation.html":{},"injectables/ModuleValidation.html":{},"injectables/ParseIntPipeV2.html":{},"injectables/ValidationPipe.html":{},"injectables/ValidationPipeV2.html":{},"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":181,"title":{},"body":{"injectables/CacheInterceptor.html":{}}}],["variable",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":775,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{},"properties.html":{}}}],["void",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/AuthenMiddleware.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/DogModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["vào",{"_index":318,"title":{},"body":{"controllers/CatsController.html":{}}}],["ware",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["watch",{"_index":726,"title":{},"body":{"index.html":{}}}],["way",{"_index":450,"title":{},"body":{"modules/CatsModule.html":{}}}],["website",{"_index":754,"title":{},"body":{"index.html":{}}}],["wildcards",{"_index":360,"title":{},"body":{"controllers/CatsController.html":{}}}],["world",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["y",{"_index":343,"title":{},"body":{"controllers/CatsController.html":{}}}],["yes",{"_index":490,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["you'd",{"_index":745,"title":{},"body":{"index.html":{}}}],["z",{"_index":663,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["z.infer",{"_index":671,"title":{},"body":{"classes/ZodValidationPipi.html":{},"miscellaneous/typealiases.html":{}}}],["z.number",{"_index":669,"title":{},"body":{"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":667,"title":{},"body":{"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["z.string",{"_index":668,"title":{},"body":{"classes/ZodValidationPipi.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":389,"title":{},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{},"dependencies.html":{}}}],["zodobject",{"_index":659,"title":{},"body":{"classes/ZodValidationPipi.html":{}}}],["zodvalidationpipi",{"_index":261,"title":{"classes/ZodValidationPipi.html":{}},"body":{"controllers/CatsController.html":{},"classes/ZodValidationPipi.html":{},"coverage.html":{}}}],["zodvalidationpipi(createcatschema",{"_index":392,"title":{},"body":{"controllers/CatsController.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/all-exceptions.filter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exceptions/all-exceptions.filter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost } from '@nestjs/common'\nimport { BaseExceptionFilter } from '@nestjs/core'\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n    catch(exception: unknown, host: ArgumentsHost): void {\n        console.log('Exception allll:::::::: all exception pass here')\n        // console.log('Exception::', exception)\n        // console.log('Host:::', host)\n        super.catch(exception, host)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppException.html":{"url":"classes/AppException.html","title":"class - AppException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/app.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/app.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common'\n\nexport class AppException extends HttpException {\n    constructor() {\n        console.log('do somthing')\n        super('Error', HttpStatus.FORBIDDEN)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nDogModule\n\nDogModule\n\nAppModule -->\n\nDogModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            DogModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { DevtoolsModule } from '@nestjs/devtools-integration'\nimport { AppController } from './app.controller';\nimport { CatsModule } from './cat/cats.module'\nimport { DogModule } from './dog/dog.module'\nimport { DatabaseModule } from './database/database.module'\nimport { AppService } from './app.service';\nimport { LoggerMiddleware, AuthenMiddleware } from './middlewares'\nimport { NextFunction } from 'express';\nimport helmet from 'helmet'\nimport morgan from 'morgan'\n\n@Module({\n  imports: [\n    CatsModule, \n    DogModule,\n    // DevtoolsModule.register({\n    //   http: process.env.NODE_ENV !== 'production',\n    // }),\n  ],\n  controllers: [AppController],\n  providers: [AppService, DatabaseModule],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n      // consumer.apply(LoggerMiddleware)\n      // .forRoutes('/')\n\n      // consumer.apply(AuthenMiddleware)\n      // .forRoutes({ path: 'cats', method: RequestMethod.GET })\n\n      // consumer.apply(LoggerMiddleware)\n      // .forRoutes({ path: 'hi*lo', method: RequestMethod.ALL })\n\n      // use middlw ware with controller\n\n      consumer.apply(helmet(), (req: Request, res: Response, next: NextFunction) => {\n        console.log('Middleware function...')\n        next()\n      }).forRoutes('/')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n\n        // add user to request\n        const request = context.switchToHttp().getRequest()\n        request.user = {\n            name: 'Huy'\n        }\n\n        console.log(':::: authentication guard :::::::')\n\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardController.html":{"url":"guards/AuthGuardController.html","title":"guard - AuthGuardController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/controller-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/controller-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class AuthGuardController implements CanActivate {\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest()\n\n        console.log(':::: authentication controller guard :::::::')\n\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardGlobal.html":{"url":"guards/AuthGuardGlobal.html","title":"guard - AuthGuardGlobal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardGlobal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/global-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/global-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class AuthGuardGlobal implements CanActivate {\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest()\n\n        console.log(':::: authentication global guard :::::::')\n\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardModule.html":{"url":"guards/AuthGuardModule.html","title":"guard - AuthGuardModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/module-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/module-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class AuthGuardModule implements CanActivate {\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const request = context.switchToHttp().getRequest()\n\n        console.log(':::: authentication module guard :::::::')\n\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenMiddleware.html":{"url":"injectables/AuthenMiddleware.html","title":"injectable - AuthenMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/authen.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/authen.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class AuthenMiddleware implements NestMiddleware {\n    use(req: Request, res: Response, next: NextFunction) {\n        console.log('in authen')\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheInterceptor.html":{"url":"injectables/CacheInterceptor.html","title":"injectable - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/cache.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/cache.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class CacheInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        console.log('Cache .....')\n        const isCached = true;\n        if (isCached) {\n          return of([]); // values get from Redis\n        }\n\n        return next.handle();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CatInterFace.html":{"url":"interfaces/CatInterFace.html","title":"interface - CatInterFace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CatInterFace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/interfaces/cats.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            breed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CatInterFace {\n    name: string;\n    age: number;\n    breed: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createCat\n                            \n                            \n                                    \n                                    Async\n                                createCate\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                findAllDog\n                            \n                            \n                                    \n                                findHello\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findValidation\n                            \n                            \n                                    \n                                    \n                                getDocs\n                            \n                            \n                                    \n                                    \n                                    \n                                getQuery\n                            \n                            \n                                    \n                                    \n                                getQueryDecorator\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getQueryTimeOut\n                            \n                            \n                                    \n                                    \n                                    \n                                parseInt\n                            \n                            \n                                    \n                                postClassValidation\n                            \n                            \n                                    \n                                    \n                                postValidation\n                            \n                            \n                                    \n                                    \n                                redirectAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createCat\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCat(createCatBody: CatInterFace)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Header('Cache-Control', 'none')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatBody\n                                            \n                                                            CatInterFace\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createCate\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCate(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            CreateCatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(request: Request, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllDog\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllDog(request: Request, res: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dog')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    findHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hi*lo')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findValidation\n                        \n                    \n                \n            \n            \n                \n                        \n                    findValidation(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('validation/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getDocs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDocs(version: string | number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://docs.nestjs.com', 302)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { url: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuery(id: number, flag: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('query')@UseGuards(AuthGuard)@UseInterceptors(CacheInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                flag\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getQueryDecorator\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryDecorator(id: number, flag: boolean, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('decorator')@UseGuards(AuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                flag\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getQueryTimeOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQueryTimeOut(id: number, flag: boolean, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('timeout')@UseGuards(AuthGuard)@UseInterceptors(TimeoutInterceptor)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                flag\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        parseInt\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseInt(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pareseint/:id')@Roles(['admin'])@UseGuards(RoleGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postClassValidation\n                        \n                    \n                \n            \n            \n                \n                        \n                    postClassValidation(createCatDto: CatInterFace)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('class-validation')\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            CatInterFace\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postValidation\n                        \n                    \n                \n            \n            \n                \n                        \n                    postValidation(createCatDto: CreateCatDtoValid)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('validation')@UsePipes(new ZodValidationPipi())\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCatDto\n                                            \n                                                            CreateCatDtoValid\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        redirectAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    redirectAction()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('redirect')@Redirect('/cats', 302)\n                \n            \n\n                    \n                        \n                            Defined in src/cat/cats.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Req, Res, Next, HttpCode, \n    Header, Redirect, Query, Param, HostParam, Body, HttpException, \n    HttpStatus, BadGatewayException, UseFilters, ParseIntPipe, ParseBoolPipe, UseGuards, UseInterceptors,\n    UsePipes } from '@nestjs/common'\nimport { NextFunction } from 'express';\nimport { CreateCatDto } from './dto/create-cat.dto'\nimport { CatsService } from './cats.services'\nimport { CatInterFace } from './interfaces/cats.interfaces'\nimport { ForbiddenException, AppException, HttpExceptionFilter } from '../exceptions'\nimport { ValidationPipe } from './pipe/validation.pipe'\nimport { ZodValidationPipi, createCatSchema, CreateCatDtoValid } from './pipe/zod.validation.pipi'\nimport { ValidationPipeV2 } from './pipe/class-validation.validation.pipe'\nimport { ParseIntPipeV2 } from './pipe/parse-int.pipe'\nimport { AuthGuard } from '../auth/auth.guard'\nimport { AuthGuardController } from '../auth/controller-auth.guard'\nimport { Roles } from '../auth/roles/roles.decorator'\nimport { RoleGuard } from '../auth/roles/roles.guard'\nimport { LoggingInterceptor } from '../interceptor/logger.interceptor'\nimport { CacheInterceptor } from '../interceptor/cache.interceptor'\nimport { TimeoutInterceptor } from '../interceptor/timeout.interceptor'\nimport { User } from '../decorator/user.decorator'\n\n@Controller('cats')\n@UseGuards(new AuthGuardController()) // Use for controller\n// @UseFilters(HttpExceptionFilter) // Dùng cho tất cả path đi vào cats\n@UseInterceptors(LoggingInterceptor) // Use interceptor in controller\nexport class CatsController {\n    constructor(private catService: CatsService) {}\n\n    @Get()\n    async findAll(@Req() request: Request, @Res() res: Response, @Next() next: NextFunction): Promise {\n        // return this.catService.findAll()\n        try {\n            return await this.catService.findAll()\n        } catch(error) {\n            throw new HttpException({\n                status: HttpStatus.FORBIDDEN,\n                error: 'This is a customer message'\n            }, HttpStatus.FORBIDDEN, {\n                cause: error\n            });\n        }\n    }\n\n    @Get('dog')\n    findAllDog(@Req() request: Request, @Res() res: Response, @Next() next: NextFunction): string {\n        // console.log(request)\n        console.log(next)\n        return 'test'\n    }\n\n    @Post()\n    // @HttpCode(204) // No Content\n    @Header('Cache-Control', 'none')\n    // @UseFilters(HttpExceptionFilter) // Filer Exception tại đây chỉ dùng cho duy nhất path này\n    createCat(@Body() createCatBody: CatInterFace): void {\n        this.catService.create(createCatBody)\n        console.log('into Post')\n        throw new ForbiddenException()\n        //throw new BadGatewayException('Somthing bad', { cause: new Error(), description:'Some error' })\n        // throw new AppException()\n    }\n\n    @Post('create')\n    async createCate(@Body() createCatDto: CreateCatDto) {\n        console.log(createCatDto)\n        return 'This is action create cat'\n    }\n\n    // Route wildcards - Using * between route so that it will catch all charracters: Ex: /cats/hisdf_sfslo\n    @Get('hi*lo')\n    findHello(): string {\n        return 'Find hilloooo'\n    }\n\n    @Get('redirect')\n    @Redirect('/cats', 302)\n    redirectAction(): string {\n        console.log('do somthing before re')\n        return 'test'\n    }\n\n    @Get('docs')\n    @Redirect('https://docs.nestjs.com', 302)\n    getDocs(@Query('version') version: string | number) {\n        if(version && version == '5') {\n            return {\n                url: 'https://docs.nestjs.com/v5/'\n            }\n        }\n    }\n\n    @Get('test/:id')\n    findOne(@Param('id', ParseIntPipe) id: number): string {\n        // using pipe to convert params data to expect type before pass to controller handler\n        console.log(id)\n\n        return 'a cat!!!'\n    }\n\n    @Get('validation/:id')\n    findValidation(@Param('id', ValidationPipe) id: unknown): string {\n\n        console.log('Params controler:::', id)\n        return 'this is test!!!'\n    }\n\n    // Zod validation\n    @Post('validation')\n    @UsePipes(new ZodValidationPipi(createCatSchema))\n    postValidation(@Body() createCatDto: CreateCatDtoValid) {\n        this.catService.create(createCatDto as CatInterFace)\n    }\n\n    // Class validation\n    @Post('class-validation')\n    postClassValidation(@Body(new ValidationPipeV2()) createCatDto: CatInterFace) {\n        console.log('in valid class path:::', createCatDto)\n        this.catService.create(createCatDto)\n    }\n    \n    @Get('pareseint/:id')\n    @Roles(['admin'])\n    @UseGuards(RoleGuard)\n    parseInt(@Param('id', new ParseIntPipeV2()) id: number): string {\n        console.log(id)\n\n        return 'this is test parse int'\n    }\n\n    @Get('query')\n    @UseGuards(AuthGuard) // use for each path \n    @UseInterceptors(CacheInterceptor)\n    getQuery(\n        @Query('id', new ParseIntPipeV2()) id: number,\n        @Query('flag', ParseBoolPipe) flag: boolean\n    ): string {\n        console.log(id);\n        console.log(flag);\n\n        return 'this is test'\n    }\n\n    @Get('timeout')\n    @UseGuards(AuthGuard) // use for each path \n    @UseInterceptors(TimeoutInterceptor)\n    async getQueryTimeOut(\n        @Query('id', new ParseIntPipeV2()) id: number,\n        @Query('flag', ParseBoolPipe) flag: boolean,\n        @User() user: unknown\n    ): Promise {\n        console.log(id);\n        console.log(flag);\n\n        console.log('Get user in controller:::', user)\n\n        const testPromise: Promise = new Promise((resovle, reject) => {\n            setTimeout(() => {\n                console.log('in promise')\n                resovle('test')\n            }, 4000)\n        })\n\n        const a = await Promise.all([testPromise]) \n\n        return 'this is test'\n    }\n\n    @Get('decorator')\n    @UseGuards(AuthGuard) // use for each path \n    // @UseInterceptors(CacheInterceptor)\n    getQueryDecorator(\n        @Query('id', new ParseIntPipeV2()) id: number,\n        @Query('flag', ParseBoolPipe) flag: boolean,\n        @User('name') user: unknown // We can use Pipe for the decorator\n    ): string {\n        console.log(id);\n        console.log(flag);\n        console.log('USER:::::', user)\n\n        return 'this is test'\n    }\n\n    // Sub-Domain Routing\n    // @Get()\n    // getInfo(@HostParam('account') account: string) {\n    //     return account;\n    // }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cat/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/cats.module.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Global, NestModule, MiddlewareConsumer, RequestMethod } from '@nestjs/common'\nimport { APP_FILTER, APP_PIPE, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core'\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.services'\nimport { LoggerMiddleware } from '../middlewares'\nimport { HttpExceptionFilter } from '../exceptions'\nimport { ModuleValidation } from './pipe/module.validation.pipe'\nimport { AuthGuardModule } from '../auth/module-auth.guard'\nimport { LoggingModuleInterceptor } from '../interceptor/logger-module.interceptor'\n\n@Global() // use Global to make this module can using everywhre in Global. should register once => CatsService can be use every where\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService, \n        { \n            provide: APP_FILTER, // use this way for each module\n            useClass: HttpExceptionFilter\n        },\n        {\n            provide: APP_PIPE,\n            useClass: ModuleValidation\n        },\n        {\n            provide: APP_GUARD,\n            useClass: AuthGuardModule\n        },\n        {\n            provide: APP_INTERCEPTOR,\n            useClass: LoggingModuleInterceptor\n        }\n    ],\n    exports: [CatsService]\n})\nexport class CatsModule implements NestModule {\n    constructor(private catsService: CatsService) {}\n    // do somthing before trigger module\n\n    configure(consumer: MiddlewareConsumer) {\n        consumer.apply(LoggerMiddleware)\n        .exclude( // Loại trừ các route này\n            { path: 'cats', method: RequestMethod.POST },\n            'cats/(.*)'\n        ).forRoutes(CatsController)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/cats.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: CatInterFace)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/cats.services.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CatInterFace\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/cats.services.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CatInterFace[]\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CatInterFace[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/cat/cats.services.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CatInterFace } from './interfaces/cats.interfaces'\n\n@Injectable()\nexport class CatsService {\n    private readonly cats: CatInterFace[] = [];\n\n    create(cat: CatInterFace) {\n      this.cats.push(cat);\n    }\n  \n    findAll(): CatInterFace[] {\n      return this.cats;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        'use strict'\n\nexport class CreateCatDto {\n    name: string;\n    age: number;\n    breed: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDtoV2.html":{"url":"classes/CreateCatDtoV2.html","title":"class - CreateCatDtoV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDtoV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/dto/create-cat-v2.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                breed\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat-v2.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat-v2.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cat/dto/create-cat-v2.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt } from 'class-validator'\n\nexport class CreateCatDtoV2 {\n    @IsString()\n    name: string;\n\n    @IsInt()\n    age: number;\n\n    @IsString()\n    breed: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(entities: [], option?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/database.module.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                option\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from \"@nestjs/common\";\n\n\n@Module({\n    providers: []\n})\nexport class DatabaseModule {\n    static forRoot(entities = [], option?): DynamicModule {\n        const providers = entities\n        return {\n            global: true, // Set the global scope. As this mentioned, making everything global is not a good design decision\n            module: DatabaseModule,\n            providers: providers,\n            exports: providers,\n        }\n    }\n}\n// How we can use Global Module => \n/**\n * import { DatabaseModule } from './database/database.module';\n * \n * @Module({\n        imports: [DatabaseModule.forRoot([User])],\n    })\n    export class AppModule {}\n */\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DogController.html":{"url":"controllers/DogController.html","title":"controller - DogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dog/dog.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dog\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getDog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getDog\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDog()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/dog/dog.controller.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller('dog')\nexport class DogController {\n    \n    @Get()\n    async getDog() {\n        return 'this is a dog!!'\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DogModule.html":{"url":"modules/DogModule.html","title":"module - DogModule","body":"\n                   \n\n\n\n\n    Modules\n    DogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dog/dog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            DogController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dog/dog.module.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common'\nimport { DogController } from './dog.controller'\nimport { LoggerMiddleware } from '../middlewares'\n\n@Module({\n    controllers: [DogController]\n})\nexport class DogModule implements NestModule {\n    configure(consumer: MiddlewareConsumer) {\n        consumer.apply(LoggerMiddleware)\n        .forRoutes(DogController)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsInterceptor.html":{"url":"injectables/ErrorsInterceptor.html","title":"injectable - ErrorsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/errors.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/errors.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    BadGatewayException,\n    CallHandler,\n  } from '@nestjs/common';\n  import { Observable, throwError } from 'rxjs';\n  import { catchError } from 'rxjs/operators';\n  \n  @Injectable()\n  export class ErrorsInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n      return next\n        .handle()\n        .pipe(\n          catchError(err => throwError(() => new BadGatewayException())),\n        );\n    }\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenException.html":{"url":"classes/ForbiddenException.html","title":"class - ForbiddenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/forbidden.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/forbidden.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common'\n\nexport class ForbiddenException extends HttpException {\n    constructor() {\n        console.log('Exception forbiden:::::')\n        super('Forbidden', HttpStatus.FORBIDDEN)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalValidation.html":{"url":"injectables/GlobalValidation.html","title":"injectable - GlobalValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/global.validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/global.validation.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common'\n\n@Injectable()\nexport class GlobalValidation implements PipeTransform {\n    async transform(value: any, metadata: ArgumentMetadata) {\n        console.log('Global Pipe validation - Can parse param here')\n\n        return value\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/exceptions/exception.filter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    console.log('exception filer here:::')\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/logger.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n    use(req: Request, res: Response, next: NextFunction) {\n        console.log('in middleware')\n        next();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingGlobalInterceptor.html":{"url":"injectables/LoggingGlobalInterceptor.html","title":"injectable - LoggingGlobalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingGlobalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/logger-global.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/logger-global.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class LoggingGlobalInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n        console.log('Before Global.....')\n\n        const now = Date.now()\n        return next\n        .handle()\n        .pipe(\n            tap(() => {\n                console.log(`After Global.... ${Date.now() - now}ms`)\n            })\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/logger.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/logger.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n        console.log('Before.....')\n\n        const now = Date.now()\n        return next.handle()\n        .pipe(\n            tap(() => {\n                console.log(`After.... ${Date.now() - now}ms`)\n            })\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingModuleInterceptor.html":{"url":"injectables/LoggingModuleInterceptor.html","title":"injectable - LoggingModuleInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingModuleInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/logger-module.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/logger-module.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\n\n@Injectable()\nexport class LoggingModuleInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n        console.log('Before Module.....')\n\n        const now = Date.now()\n        return next.handle()\n        .pipe(\n            tap(() => {\n                console.log(`After Module.... ${Date.now() - now}ms`)\n            })\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleValidation.html":{"url":"injectables/ModuleValidation.html","title":"injectable - ModuleValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModuleValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/module.validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/module.validation.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common'\n\n@Injectable()\nexport class ModuleValidation implements PipeTransform {\n    async transform(value: any, metadata: ArgumentMetadata) {\n        console.log('Module Pipe validation - Can parse param here')\n\n        return value\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseIntPipeV2.html":{"url":"injectables/ParseIntPipeV2.html","title":"injectable - ParseIntPipeV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseIntPipeV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/parse-int.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/parse-int.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common'\n\n@Injectable()\nexport class ParseIntPipeV2 implements PipeTransform {\n    transform(value: string, metadata: ArgumentMetadata): number {\n        const val = parseInt(value, 10);\n        if(isNaN(val)) {\n            throw new BadRequestException('Validation failer')\n        }\n\n        return val\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(context: ExecutionContext, next: CallHandler): Observable> {\n        \n        return next\n        .handle()\n        .pipe(map(data => ({ data })))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/roles/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                matchRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/roles/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/roles/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchRoles\n                        \n                    \n                \n            \n            \n                \nmatchRoles(roles, useRoles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/roles/roles.guard.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                roles\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                useRoles\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { Roles } from './roles.decorator'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const roles = this.reflector.get(Roles, context.getHandler());\n        console.log(roles)\n        if(!roles) {\n            return true\n        }\n        // Thường trước khi đến check author sẽ đi qua authen và có filed user trong request\n        // const request = context.switchToHttp().getRequest()\n        // const user = request.user;\n        // return this.matchRoles(roles, user.roles)\n\n        // throw new UnauthorizedException(); // tùy chỉnh nén lỗi, nhưng mặc định false là Forbiden\n\n        return false\n    }\n\n    matchRoles(roles, useRoles) {\n        return true\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/timeout.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/timeout.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Do somthing of interceptor....')\n\n    return next.handle().pipe(\n      timeout(5000),\n      catchError(err => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  };\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interceptor/transform.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(context: ExecutionContext, next: CallHandler): Observable> {\n        \n        return next\n        .handle()\n        .pipe(map(data => ({ data })))\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/validation.pipe.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    transform(value: any, metadata: ArgumentMetadata) {\n        console.log(value)\n        return value\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipeV2.html":{"url":"injectables/ValidationPipeV2.html","title":"injectable - ValidationPipeV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipeV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/class-validation.validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                        \n                    toValidate(metatype: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/class-validation.validation.pipe.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                metatype\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/class-validation.validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common'\nimport { validate } from 'class-validator'\nimport { plainToInstance } from 'class-transformer'\n\n@Injectable()\nexport class ValidationPipeV2 implements PipeTransform {\n    async transform(value: any, { metatype }: ArgumentMetadata) {\n        console.log('in Pipe Class validation V2:::::', value, metatype)\n        if(!metatype || !this.toValidate(metatype)){\n            return value\n        }\n        const object = plainToInstance(metatype, value)\n        console.log('plain object::::', object)\n        const errors = await validate(object)\n        if(errors.length > 0) {\n            throw new BadRequestException('Validation faile:::::')\n        }\n\n        return value\n    }\n\n    private toValidate(metatype: Function): boolean {\n        const types: Function[] = [String, Boolean, Number, Array, Object]\n        return !types.includes(metatype)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ZodValidationPipi.html":{"url":"classes/ZodValidationPipi.html","title":"class - ZodValidationPipi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ZodValidationPipi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cat/pipe/zod.validation.pipi.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ZodObject)\n                    \n                \n                        \n                            \n                                Defined in src/cat/pipe/zod.validation.pipi.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ZodObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cat/pipe/zod.validation.pipi.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata, BadGatewayException } from '@nestjs/common'\nimport { ZodObject, z } from 'zod'\n\nexport class ZodValidationPipi implements PipeTransform {\n    constructor(private schema: ZodObject ){}\n\n    transform(value: any, metadata: ArgumentMetadata) {\n        try {\n            console.log(value)\n            this.schema.parse(value)\n        } catch(error) {\n            throw new BadGatewayException('Validation failed:::')\n        }\n        return value\n    }\n}\n\nexport const createCatSchema = z.object({\n    name: z.string(),\n    age: z.number(),\n    breed: z.string()\n}).required();\nexport type CreateCatDtoValid = z.infer\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/controller-auth.guard.ts\n            \n            guard\n            AuthGuardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/global-auth.guard.ts\n            \n            guard\n            AuthGuardGlobal\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/module-auth.guard.ts\n            \n            guard\n            AuthGuardModule\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/roles/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/roles/roles.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cat/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/cat/cats.services.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cat/dto/create-cat-v2.dto.ts\n            \n            class\n            CreateCatDtoV2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cat/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cat/interfaces/cats.interfaces.ts\n            \n            interface\n            CatInterFace\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cat/pipe/class-validation.validation.pipe.ts\n            \n            injectable\n            ValidationPipeV2\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cat/pipe/global.validation.pipe.ts\n            \n            injectable\n            GlobalValidation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cat/pipe/module.validation.pipe.ts\n            \n            injectable\n            ModuleValidation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cat/pipe/parse-int.pipe.ts\n            \n            injectable\n            ParseIntPipeV2\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cat/pipe/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cat/pipe/zod.validation.pipi.ts\n            \n            class\n            ZodValidationPipi\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cat/pipe/zod.validation.pipi.ts\n            \n            variable\n            createCatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dog/dog.controller.ts\n            \n            controller\n            DogController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/app.exception.ts\n            \n            class\n            AppException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/forbidden.exception.ts\n            \n            class\n            ForbiddenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/cache.interceptor.ts\n            \n            injectable\n            CacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/errors.interceptor.ts\n            \n            injectable\n            ErrorsInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/logger-global.interceptor.ts\n            \n            injectable\n            LoggingGlobalInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/logger-module.interceptor.ts\n            \n            injectable\n            LoggingModuleInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/logger.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/authen.middleware.ts\n            \n            injectable\n            AuthenMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/devtools-integration : ^0.1.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            helmet : ^7.1.0\n        \n            morgan : ^1.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.22.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nDogModule\n\nDogModule\n\nAppModule -->\n\nDogModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateCatDtoValid   (src/.../zod.validation.pipi.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cat/pipe/zod.validation.pipi.ts\n    \n    \n        \n            \n                \n                    \n                    CreateCatDtoValid\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCatSchema   (src/.../zod.validation.pipi.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cat/pipe/zod.validation.pipi.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n    name: z.string(),\n    age: z.number(),\n    breed: z.string()\n}).required()\n                    \n                \n\n\n        \n    \n\n    src/auth/roles/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Reflector.createDecorator()\n                    \n                \n\n\n        \n    \n\n    src/decorator/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: string, ctx: ExecutionContext) => {\n        console.log('decorator of User... could get User from request:: use in controller')\n        const request = ctx.switchToHttp().getRequest();\n        const user = request.user\n\n        return data ? user?.[data] : user\n    }\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
